{"version":3,"sources":["functions/setAttributeForSelectedText.js","components/TagsPanel.js","vars.js","functions/getSelectionRange.js","components/ButtonsPanel.js","components/MainSettingsPanel.js","components/DialogLink.js","functions/restoreSelection.js","components/EditorPanel.js","components/ContentEditable.js","components/HTMLeditable.js","components/TabContainer.js","components/TabSwitches.js","components/Settings.js","components/SettingsTagsPanel.js","MyTheme.js","App.js","functions/getSelection.js","startingValue.js","serviceWorker.js","index.js"],"names":["setAttributeForSelectedText","number","styleName","styleValue","document","execCommand","fontElements","querySelector","getElementsByTagName","i","length","size","removeAttribute","style","TagsPanel","props","showDialogLink","setTag","bind","clearFormat","group","tag","this","editAllowed","command","param","tagParameters","toUpperCase","values","bgcolor","color","selectionRange","window","getSelection","sel","getRangeAt","rangeCount","selection","createRange","getSelectionRange","toString","container","parentElement","select","startContainer","parentNode","nodeName","outerHTML","innerHTML","groupsTagArray","Object","keys","groupsTagList","map","groupIndex","groupTags","groupTagKeys","countItems","tagList","index","cuttentTag","materialize","iconName","Icon","IconsLib","selected","key","aria-label","title","name","onClick","Box","className","component","Divider","orientation","Tabs","variant","value","React","Component","ButtonsPanel","state","setGlobalParam","reset","download","undo","redo","print","states","editText","alert","block","link","createElement","file","Blob","type","href","URL","createObjectURL","click","buttons","MainSettingsPanel","eventHandler","switchEditText","fontSizeList","sizes","fontSize","elem","MenuItem","lineHeightList","lineHeight","FormControlLabel","control","Switch","checked","onChange","edit","FormControl","Select","labelId","id","styles","inputs","DialogLink","switchDialogLink","addLinkUrl","createRef","Dialog","open","isOpen","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","ref","fullWidth","DialogActions","Button","close","current","lastChild","send","restoreSelection","range","removeAllRanges","addRange","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","EditorPanel","selectedText","setState","tabSwitch","dialogLink","handleChange","switchShowColorPiper","changeColor","paletteEdit","hex","colorPicker","AppBar","position","Paper","startIcon","backgroundColor","tags","tabActive","Modal","aria-describedby","endIcon","ContentEditable","tabIndex","contentEditable","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","html","HTMLeditable","placeholder","mode","theme","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","TabContainer","other","h2","Typography","role","hidden","TabSwitches","indicatorColor","textColor","centered","Tab","icon","disabled","Settings","switchOpenSettings","updStates","SpeedDial","ariaLabel","onOpen","direction","SpeedDialAction","tooltipTitle","SettingsTagsPanel","saveNewSettings","saveChange","Checkbox","openSettingsTagsPanel","text","settingsTagsPanelTitle","cancel","save","createMuiTheme","palette","primary","deepPurple","secondary","blue","warning","typography","overrides","MuiButton","root","minWidth","App","stateName","newValue","changeDisplayedTags","newTagsParam","setNewText","e","sanitize","data","console","log","MyTheme","inputName","prettyText","pretty","sanitizeHtml","sanitizeParam","Grid","spacing","alignItems","justify","item","xs","md","lg","startingValue","allowedTags","allowedAttributes","a","parser","lowerCaseTags","transformTags","exclusiveFilter","frame","trim","outside","titles","h1","h3","h4","h5","h6","textStyle","b","underline","strike","textPositioning","left","center","right","full","textIndents","ul","ol","indent","outdent","blockquote","adding","hr","register","sup","sub","css","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d357dc2.chunk.js","sourcesContent":["// setAttributeForSelectedText\r\n\r\n// setAttributeForSelectedText\r\nexport const setAttributeForSelectedText = (number, styleName, styleValue) => {\r\n  document.execCommand(\"fontSize\", false, `${number}`);\r\n\r\n  let editableBlock = document.querySelector(\".content\"); // блок, текст в котором можно редактировать\r\n  let fontElements = editableBlock.getElementsByTagName(\"font\"); // все элементы, у которых изменился размер шрифта\r\n\r\n  for (let i = 0; i < fontElements.length; i++) {\r\n    if (fontElements[i].size == number) {\r\n      fontElements[i].removeAttribute(\"size\"); // удалить установленное значение\r\n      fontElements[i].style = `${styleName}: ${styleValue}`; // установить новый размер шрифта\r\n    }\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { getSelectionRange } from '../functions/getSelectionRange';\r\nimport { getSelection } from '../functions/getSelection';\r\nimport { setAttributeForSelectedText } from '../functions/setAttributeForSelectedText';\r\n\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  formatCommand_uppercase,\r\n  formatCommand_lowercase,\r\n} from \"../vars\";\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class TagsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.state = props.param;\r\n\r\n    this.showDialogLink = this.props.showDialogLink;\r\n    this.setTag = this.setTag.bind(this);\r\n    this.clearFormat = this.clearFormat.bind(this);\r\n  }\r\n\r\n  // установить тег (форматирование текста)\r\n  setTag(group, tag) {\r\n\r\n    // ничего не делать, если это не первая вкладка\r\n    if (!this.props.editAllowed) return false;\r\n\r\n    let command = this.props.param.tagParameters[group][tag].command; // команды, прописанные для этого тега\r\n\r\n    // если команды для этого тега существуют\r\n    if (command) {\r\n      // *** document.execCommand('Название команды', false, значение (если требуется));\r\n      document.execCommand(command[0], command[1], command[2].toUpperCase());\r\n    }\r\n\r\n    // если команды для этого тега НЕ существуют\r\n    else {\r\n      // цвет фона\r\n      if (tag === formatCommand_bgcolor) {\r\n        document.execCommand('hiliteColor', false, this.props.values.bgcolor);\r\n\r\n        // цвет текста\r\n      } else if (tag === formatCommand_color) {\r\n        document.execCommand('styleWithCSS', false, 'true');\r\n        document.execCommand('foreColor', false, this.props.values.color);\r\n        document.execCommand('styleWithCSS', false, 'false');\r\n      }\r\n\r\n      // ссылка\r\n      else if (tag === formatCommand_link) {\r\n        let selectionRange = getSelectionRange(); // записать выделенный текст\r\n\r\n        // если есть выделенный текст\r\n        if (selectionRange.toString().length > 0) this.showDialogLink(selectionRange); // вызвать модальное окно ввода url\r\n      }\r\n\r\n      // очистка формата\r\n      else if (tag === formatCommand_clear) {\r\n        document.execCommand('removeFormat', false, '');\r\n        document.execCommand('unlink', false, '');\r\n\r\n        this.clearFormat();\r\n      }\r\n\r\n      // uppercase\r\n      else if (tag === formatCommand_uppercase) {\r\n        setAttributeForSelectedText(6, 'text-transform', 'uppercase');\r\n      }\r\n\r\n      // lowercase\r\n      else if (tag === formatCommand_lowercase) {\r\n        setAttributeForSelectedText(6, 'text-transform', 'lowercase');\r\n      }\r\n    }\r\n  }\r\n\r\n  //  очистить формат, удалив родительский тег\r\n  clearFormat() {\r\n    let container = null; // блок, с которым работаем\r\n    // если выделен (для IE)\r\n    if (document.selection) {\r\n      // записать выделенный текст\r\n      container = document.selection.createRange().parentElement();\r\n    }\r\n    // если выделен\r\n    else {\r\n      // диапазон текста, который пользователь выделил на странице\r\n      let select = window.getSelection();\r\n\r\n      // если количество диапазонов в выделении > 0\r\n      if (select.rangeCount > 0) {\r\n        // записать выделенный текст\r\n        container = select.getRangeAt(0).startContainer.parentNode;\r\n      }\r\n    }\r\n\r\n    // если этот элемент не div и не li\r\n    // *** пояснение:\r\n    // * [div] -> чтобы нельзя было удалить сам блок .content при выделении всего содержимого\r\n    // * [li] -> чтобы нельзя было убирать формат списков (слишком много багов из-за этого)\r\n    if (container.nodeName !== \"DIV\" && container.nodeName !== \"LI\") {\r\n      container.outerHTML = container.innerHTML; // удалить родительский тег\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // преобразовать объект в массив ключей, чтобы можно было использовать .map\r\n    let tagParameters = this.props.param.tagParameters;\r\n    let groupsTagArray = Object.keys(tagParameters);\r\n\r\n    let groupsTagList = groupsTagArray.map((group, groupIndex) => {\r\n\r\n      let groupTags = tagParameters[group];\r\n      let groupTagKeys = Object.keys(groupTags);\r\n\r\n      let countItems = 0; // к-во элементов в списке\r\n\r\n      let tagList = groupTagKeys.map((tag, index) => {\r\n        let cuttentTag = tagParameters[group][tag];\r\n\r\n        if (cuttentTag.materialize) {\r\n          let iconName = cuttentTag.materialize.iconName;\r\n          let Icon = IconsLib[iconName];\r\n\r\n          if (cuttentTag.selected) {\r\n            countItems++;\r\n\r\n            return (\r\n              <li key={index}>\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  aria-label={cuttentTag.materialize.title}\r\n                  title={cuttentTag.materialize.title}\r\n                  name={tag}\r\n                  onClick={() => this.setTag(group, tag)}\r\n                >\r\n                  <Icon />\r\n                </IconButton>\r\n              </li>\r\n            );\r\n          }\r\n        };\r\n      });\r\n\r\n      // если в списке есть элементы\r\n      if (countItems) {\r\n        return (\r\n          <Box\r\n            key={groupIndex}\r\n            aria-label=\"li item scrollable horizontal tabs\"\r\n            className={\"clear-list tag-list\"}\r\n          >\r\n            <Box\r\n              component=\"ul\"\r\n              aria-label=\"ul items\"\r\n              className={\"tag-list clear-list\"}>\r\n              {tagList}\r\n            </Box>\r\n            {/* После последнего элемента не добавлять черту */}\r\n            {(groupsTagArray.length - 1 !== groupIndex) &&\r\n              <Divider orientation=\"vertical\" />\r\n            }\r\n          </Box>\r\n        );\r\n      }\r\n\r\n      countItems = 0; // обнулить счётчик элементов списка\r\n    });\r\n\r\n\r\n    return (\r\n      <Tabs\r\n        aria-label=\"outlined primary button li group\"\r\n        className={\"tag-list tag-list-wp clear-list scrollbar--center\"}\r\n        orientation=\"horizontal\"\r\n        variant=\"scrollable\"\r\n        value={0}\r\n      >\r\n        {groupsTagList}\r\n      </Tabs>\r\n\r\n    )\r\n  }\r\n}\r\n","// переменные \r\n\r\nexport const formatCommand_clear = 'clearFormat';\r\nexport const formatCommand_bgcolor = 'bgcolor';\r\nexport const formatCommand_color = 'color';\r\nexport const formatCommand_link = 'link';\r\nexport const formatCommand_uppercase = 'uppercase';\r\nexport const formatCommand_lowercase = 'lowercase';\r\n\r\n\r\nexport const default_bgcolor = '#ffeb3b';\r\nexport const default_color = '#f44336';","// Возвращает выделенный текст\r\n\r\n\r\nexport const getSelectionRange = () => {\r\n  if (window.getSelection) {\r\n    var sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      return sel.getRangeAt(0);\r\n    }\r\n  } else if (document.selection && document.selection.createRange) {\r\n    return document.selection.createRange();\r\n  }\r\n  return null;\r\n}","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\n// настройка тегов\r\nexport default class ButtonsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.reset = props.reset;\r\n    // this.switchEditText = props.switchEditText;\r\n\r\n    this.download = this.download.bind(this);\r\n    this.undo = this.undo.bind(this);\r\n    this.redo = this.redo.bind(this);\r\n    this.print = this.print.bind(this);\r\n  }\r\n\r\n  // скачать отредактированный текст\r\n  download() {\r\n    // если режим редактирования выключен\r\n    if (!this.props.param.states.editText) {\r\n      let editableBlock = document.querySelector(\".content\"); // блок, текст в котором можно редактировать\r\n      let block = editableBlock.outerHTML; // текст внутри блока\r\n\r\n      let link = document.createElement(\"a\"); // сгенерировать ссылку\r\n      let file = new Blob([block], { type: \"txt\" }); // сгенерировать файл\r\n      link.href = URL.createObjectURL(file); // сгенерировать href\r\n      link.download = \"text.txt\"; // название и расширение файла\r\n      link.click(); // имитировать нажатие на ссылку\r\n\r\n      // если режим редактирования НЕ выключен\r\n    } else {\r\n      alert(\r\n        \"Перед скачиванием нужно выйти из режима редактирования.\\nИначе параметры редактирования не будут применены к тексту\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  undo() {\r\n    document.execCommand(\"undo\"); // Отмена последнего действия\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  redo() {\r\n    document.execCommand(\"redo\"); // Повтор последнего действия\r\n  }\r\n\r\n  // напечатать текст/код\r\n  print() {\r\n    window.print();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box className=\"box-margin\">\r\n        {/* КНОПКА Отменить */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.undo}\r\n          title={this.props.param.buttons.undo}\r\n          onClick={this.undo}\r\n        >\r\n          <IconsLib.Undo />\r\n        </IconButton>\r\n\r\n\r\n        {/* КНОПКА Повторить */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.redo}\r\n          title={this.props.param.buttons.redo}\r\n          onClick={this.redo}\r\n        >\r\n          <IconsLib.Redo />\r\n        </IconButton>\r\n\r\n\r\n        {/* КНОПКА скачать */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.download}\r\n          title={this.props.param.buttons.download}\r\n          onClick={this.download}\r\n        >\r\n          <IconsLib.GetApp />\r\n        </IconButton>\r\n\r\n\r\n\r\n        {/* КНОПКА печать */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.print}\r\n          title={this.props.param.buttons.print}\r\n          onClick={this.print}\r\n        >\r\n          <IconsLib.Print />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class MainSettingsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.eventHandler = props.eventHandler;\r\n    this.reset = props.reset;\r\n    this.switchEditText = props.switchEditText;\r\n  }\r\n\r\n  render() {\r\n    let fontSizeValues = this.props.param.sizes.fontSize.values;\r\n    let fontSizeList = fontSizeValues.map((elem, index) => {\r\n      return (\r\n        <MenuItem key={index} value={elem}>{elem}</MenuItem>\r\n      );\r\n    });\r\n\r\n    let lineHeightValues = this.props.param.sizes.lineHeight.values;\r\n    let lineHeightList = lineHeightValues.map((elem, index) => {\r\n      return (\r\n        <MenuItem key={index} value={elem}>{elem}</MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Box className=\"flex-block child-margin box-margin\" >\r\n        {/* КНОПКА Режим редактирования текста */}\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={this.props.param.states.editText}\r\n              onChange={this.switchEditText}\r\n              title={this.props.param.buttons.edit}\r\n              value=\"edit\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n        />\r\n\r\n\r\n        {/* Размер текста */}\r\n        <FormControl >\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            size=\"small\"\r\n            onChange={value => this.eventHandler(\"fontSize\", value)}\r\n            value={this.props.param.styles.fontSize}\r\n            title={this.props.param.inputs.fontSize}\r\n          >\r\n            {fontSizeList}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Высота строки */}\r\n        <FormControl >\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            size=\"small\"\r\n            onChange={value => this.eventHandler(\"lineHeight\", value)}\r\n            value={this.props.param.styles.lineHeight}\r\n            title={this.props.param.inputs.lineHeight}\r\n          >\r\n            {lineHeightList}\r\n          </Select>\r\n        </FormControl>\r\n\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// панель редактирования\r\nexport default class DialogLink extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.switchDialogLink = props.switchDialogLink;\r\n    this.addLinkUrl = props.addLinkUrl;\r\n\r\n    this.href = React.createRef();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen ? true : false}\r\n        onClose={this.switchDialogLink}\r\n        aria-labelledby=\"form-dialog-link-url\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-link-url\">Введите адрес ссылки</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"link-url\"\r\n            label=\"Адрес ссылки\"\r\n            type=\"url\"\r\n            ref={this.href}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.switchDialogLink} color=\"primary\">\r\n            {this.props.param.buttons.close}\r\n          </Button>\r\n          <Button onClick={() => this.addLinkUrl(this.href.current.lastChild.lastChild.value)} color=\"primary\">\r\n            {this.props.param.buttons.send}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","// востанавливает выделенную область\r\n\r\nexport const restoreSelection = (range) => {\r\n  if (range) {\r\n    if (window.getSelection) {\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (document.selection && range.select) {\r\n      range.select();\r\n    }\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport { SwatchesPicker } from \"react-color\";\r\n\r\n\r\nimport TagsPanel from \"./TagsPanel\";\r\nimport ButtonsPanel from \"./ButtonsPanel\";\r\nimport MainSettingsPanel from \"./MainSettingsPanel\";\r\nimport DialogLink from \"./DialogLink\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nimport { restoreSelection } from '../functions/restoreSelection';\r\n\r\nimport {\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n} from \"../vars\";\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\n\r\n// панель редактирования\r\nexport default class EditorPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.switchEditText = props.switchEditText;\r\n    this.tabSwitch = props.tabSwitch;\r\n    this.dialogLink = props.dialogLink;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.switchShowColorPiper = this.switchShowColorPiper.bind(this);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.switchDialogLink = this.switchDialogLink.bind(this);\r\n  }\r\n\r\n  // при изменении выбранного цвета в палитре\r\n  handleChange(color) {\r\n    this.setState(state => ({\r\n      styles: {\r\n        ...state.styles,\r\n        [state.states.paletteEdit]: color.hex // изменить цвет для палитры\r\n      }\r\n    }));\r\n  }\r\n\r\n  // смена статуса панели выбора цвета [показать/скрыть]\r\n  switchShowColorPiper() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        colorPicker: !state.states.colorPicker\r\n      }\r\n    }));\r\n  }\r\n\r\n  // при открытии панели выбора цвета, нажатием на палитру\r\n  changeColor(param) {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        paletteEdit: param // изменить палитру, которую сейчас редактируем\r\n      }\r\n    }));\r\n\r\n    this.switchShowColorPiper();\r\n  }\r\n\r\n  // показать/скрыть диалог ввода ссылки\r\n  switchDialogLink(selectedText) {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        // заменить значение на противоположное\r\n        dialogLink: !this.state.states.dialogLink\r\n      },\r\n      selectedText: selectedText\r\n    }));\r\n  }\r\n\r\n  // добавить ссылку\r\n  addLinkUrl = (href) => {\r\n    this.switchDialogLink(); // закрыть модальное окно\r\n\r\n    // если выделенный ранее текст записан\r\n    if (this.state.selectedText) {\r\n      restoreSelection(this.state.selectedText); // восстановить выделение\r\n\r\n      document.execCommand('createLink', false, href); // добавить ссылку\r\n\r\n      this.setState(state => ({\r\n        selectedText: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ElevationScroll>\r\n        <AppBar\r\n          component={'header'}\r\n          position=\"fixed\"\r\n          color=\"inherit\"\r\n        >\r\n          <h2 className=\"meta-title\">Панель редактирования</h2>\r\n          <Paper className={\"editor-panel-wp editor-panel__inner\"}>\r\n            <Tabs\r\n              aria-label=\"outlined primary button li group\"\r\n              className={\"scrollbar--center\"}\r\n              orientation=\"horizontal\"\r\n              variant=\"scrollable\"\r\n              value={0}\r\n            >\r\n\r\n              {/* основные настройки */}\r\n              <MainSettingsPanel\r\n                param={this.props.param}\r\n                eventHandler={this.setGlobalParam}\r\n                reset={this.reset}\r\n                switchEditText={this.switchEditText}\r\n              />\r\n              <Box>\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n\r\n              {/* панель с кнопками */}\r\n              <ButtonsPanel\r\n                param={this.props.param}\r\n              />\r\n\r\n              <Box>\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n\r\n              <Box className=\"box-margin\">\r\n                {/* Выбор цвета фона */}\r\n                <Button\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  title=\"Установить цвет фона\"\r\n                  onClick={() => this.changeColor(formatCommand_bgcolor)}\r\n                  startIcon={<IconsLib.FormatColorFill color=\"inherit\" />}\r\n                >\r\n                  <span\r\n                    className={\"button-pallet__color\"}\r\n                    style={{ backgroundColor: this.state.styles.bgcolor }}>\r\n                  </span>\r\n                </Button>\r\n\r\n                {/* Выбор цвета текста */}\r\n                <Button\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  title=\"Установить цвет текста\"\r\n                  onClick={() => this.changeColor(formatCommand_color)}\r\n                  startIcon={<IconsLib.FormatColorText />}\r\n                >\r\n                  <span\r\n                    className={\"button-pallet__color\"}\r\n                    style={{ backgroundColor: this.state.styles.color }}>\r\n                  </span>\r\n                </Button>\r\n              </Box>\r\n\r\n            </Tabs>\r\n\r\n\r\n            <Divider />\r\n            <TagsPanel\r\n              param={this.props.param}\r\n              values={this.state.styles}\r\n              tags={\"tagParameters_outside\"}\r\n              editAllowed={\r\n                this.props.param.states.tabActive == \"0\" ? true : false\r\n              }\r\n              switchShowColorPiper={this.switchShowColorPiper}\r\n              showDialogLink={this.switchDialogLink}\r\n            />\r\n\r\n\r\n            {/* Панель выбора цвета */}\r\n            <Modal\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n              open={this.state.states.colorPicker}\r\n              onClose={this.switchShowColorPiper}\r\n            >\r\n\r\n              <div className={\"color-picker-wp\"}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  label=\"Закрыть\"\r\n                  aria-label=\"close\"\r\n                  onClick={this.switchShowColorPiper}\r\n                  size=\"medium\"\r\n                  className={\"color-picker-wp__close\"}\r\n                  endIcon={<IconsLib.HighlightOff />}\r\n                >\r\n                  {this.props.param.buttons.close}\r\n                </Button>\r\n\r\n                <SwatchesPicker\r\n                  onChange={this.handleChange}\r\n                  color={this.state.styles.bgcolor}\r\n                />\r\n              </div>\r\n            </Modal>\r\n\r\n            <DialogLink\r\n              param={this.state}\r\n              isOpen={this.state.states.dialogLink}\r\n              switchDialogLink={this.switchDialogLink}\r\n              addLinkUrl={this.addLinkUrl}\r\n            />\r\n          </Paper>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class ContentEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n  }\r\n\r\n  render() {\r\n    let createContent = () => {\r\n      return { __html: this.props.param.html };\r\n    }\r\n    return (\r\n      <div\r\n        tabIndex={this.props.param.states.editText ? '0' : null}\r\n        contentEditable={this.props.param.states.editText ? 'true' : 'false'}\r\n        suppressContentEditableWarning={true} // чтобы убрать в консоли предупреждение о contentEditable\r\n        className={this.props.param.states.editText ? 'content print edit' : 'print content'}\r\n        dangerouslySetInnerHTML={createContent()} // вставить переданный текст\r\n        style={{\r\n          fontSize: `${this.props.param.styles.fontSize}px`,\r\n          lineHeight: `${this.props.param.styles.lineHeight}em`\r\n        }}\r\n      >\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/snippets/html\";\r\nimport \"ace-builds/src-noconflict/theme-xcode\";\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class HTMLeditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AceEditor\r\n        placeholder=\"Html\"\r\n        mode=\"html\"\r\n        theme=\"xcode\"\r\n        name=\"blah2\"\r\n        onChange={this.onChange}\r\n        fontSize={14}\r\n        showPrintMargin={true}\r\n        showGutter={true}\r\n        highlightActiveLine={true}\r\n        value={this.props.param.html}\r\n\r\n        setOptions={{\r\n          enableBasicAutocompletion: false,\r\n          enableLiveAutocompletion: false,\r\n          enableSnippets: true,\r\n          showLineNumbers: true,\r\n          tabSize: 2,\r\n        }} />\r\n    );\r\n  }\r\n};","// tabContent\r\n\r\nimport React from \"react\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class TabContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { children, value, index, ...other } = this.props;\r\n\r\n    return (\r\n      <Paper\r\n        component=\"section\">\r\n        <header className=\"meta-title\">\r\n          <h2>{this.props.h2}</h2>\r\n        </header>\r\n\r\n        <Typography\r\n          component=\"div\"\r\n          role=\"tabpanel\"\r\n          hidden={value !== index}\r\n          id={`simple-tabpanel-${index}`}\r\n          aria-labelledby={`simple-tab-${index}`}\r\n          {...other}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n}","// tabSwitches\r\n\r\nimport React from 'react';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// настройка тегов\r\nexport default class TabSwitches extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Paper component={\"nav\"} className={\"tabs-nav\"}>\r\n        <Tabs\r\n          className={\"clear-list\"}\r\n          value={this.props.value}\r\n          onChange={this.onChange}\r\n          aria-label=\"simple tabs example\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab\r\n            // label=\"Текст\"\r\n            icon={<IconsLib.Subject />}\r\n            aria-label=\"Режим просмотра текста\"\r\n            title=\"Режим просмотра текста\" />\r\n          <Tab\r\n            // label=\"HTML\"\r\n            icon={<IconsLib.SettingsEthernet />}\r\n            aria-label=\"Режим просмотра HTML\"\r\n            title=\"Режим просмотра HTML\" />\r\n          <Tab\r\n            // label=\"CSS\"\r\n            icon={<IconsLib.Texture />}\r\n            aria-label=\"Режим просмотра CSS\"\r\n            title=\"Режим просмотра CSS\"\r\n            disabled\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n    )\r\n  }\r\n}","// Settings\r\n\r\n\r\nimport React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\nimport {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  formatCommand_uppercase,\r\n  formatCommand_lowercase,\r\n} from \"../vars\";\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class Settings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n    this.updStates = props.updStates;\r\n  }\r\n\r\n  switchOpenSettings = () => {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        switchOpenSettings: !this.state.states.switchOpenSettings\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const actions = [\r\n      { icon: <IconsLib.Save />, name: 'Сохранить', onClick: this.switchOpenSettings },\r\n      { icon: <IconsLib.Print />, name: 'Печать', onClick: this.switchOpenSettings },\r\n      { icon: <IconsLib.GetApp />, name: 'Скачать', onClick: this.switchOpenSettings },\r\n    ];\r\n\r\n    return (\r\n      <Box\r\n        className={'settings-btn'}\r\n      >\r\n\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial example\"\r\n          hidden={false}\r\n          icon={<IconsLib.TuneRounded />}\r\n          onClose={this.switchOpenSettings}\r\n          onOpen={this.switchOpenSettings}\r\n          open={this.state.states.switchOpenSettings}\r\n          direction={'up'}\r\n        >\r\n          {/* {actions.map(action => (\r\n            <SpeedDialAction\r\n              key={action.name}\r\n              icon={action.icon}\r\n              tooltipTitle={action.name}\r\n              onClick={action.onClick}\r\n            />\r\n          ))} */}\r\n\r\n          <SpeedDialAction\r\n            key={'apps'}\r\n            icon={<IconsLib.Apps />}\r\n            tooltipTitle={'Отображаемые иконки'}\r\n            onClick={() => this.updStates('openSettingsTagsPanel')}\r\n          />\r\n        </SpeedDial>\r\n      </Box>\r\n    )\r\n  }\r\n}","// SettingsTagsPanel\r\n\r\nimport React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  formatCommand_uppercase,\r\n  formatCommand_lowercase,\r\n} from \"../vars\";\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class SettingsTagsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n    this.saveChange = props.saveChange;\r\n    this.updStates = props.updStates;\r\n  }\r\n\r\n  saveNewSettings = () => {\r\n    this.updStates('openSettingsTagsPanel') // закрыть панель\r\n    this.saveChange(this.state.tagParameters);\r\n  }\r\n\r\n  handleChange = (group, tag) => {\r\n    this.setState(state => ({\r\n      tagParameters: {\r\n        ...state.tagParameters,\r\n        [group]: {\r\n          ...state.tagParameters[group],\r\n          [tag]: {\r\n            ...state.tagParameters[group][tag],\r\n            selected: !this.state.tagParameters[group][tag].selected,\r\n          },\r\n        },\r\n      }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    // преобразовать объект в массив ключей, чтобы можно было использовать .map\r\n    let tagParameters = this.state.tagParameters;\r\n    let groupsTagArray = Object.keys(tagParameters);\r\n\r\n    let groupsTagList = groupsTagArray.map((group, groupIndex) => {\r\n\r\n      let groupTags = tagParameters[group];\r\n      let groupTagKeys = Object.keys(groupTags);\r\n\r\n      let tagList = groupTagKeys.map((tag, index) => {\r\n        let cuttentTag = tagParameters[group][tag];\r\n\r\n        if (cuttentTag.materialize) {\r\n          let iconName = cuttentTag.materialize.iconName;\r\n          let Icon = IconsLib[iconName];\r\n\r\n          return (\r\n            <Box component=\"li\">\r\n              <FormControlLabel\r\n                key={index}\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    checked={cuttentTag.selected}\r\n                    onChange={() => this.handleChange(group, tag)}\r\n                    value={tag} />\r\n                }\r\n                label={\r\n                  <Box component=\"span\">\r\n                    <IconButton\r\n                      // color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label={cuttentTag.materialize.title}\r\n                      title={cuttentTag.materialize.title}\r\n                      name={tag}\r\n                    >\r\n                      <Icon />\r\n                    </IconButton>\r\n                    {cuttentTag.materialize.title}\r\n                  </Box>\r\n                }\r\n              />\r\n            </Box>\r\n          );\r\n        };\r\n      });\r\n\r\n      return (\r\n        <Box\r\n          component=\"li\"\r\n          key={groupIndex}\r\n          aria-label=\"li item\"\r\n          className={\"clear-list\"}\r\n        >\r\n          <Box\r\n            component=\"ul\"\r\n            className={\"clear-list\"}\r\n            aria-label=\"ul items\"\r\n          >\r\n            {tagList}\r\n          </Box>\r\n          {/* После последнего элемента не добавлять черту */}\r\n          {(groupsTagArray.length - 1 !== groupIndex) &&\r\n            <Divider />\r\n          }\r\n        </Box>\r\n      );\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n      <Dialog\r\n        open={this.props.param.states.openSettingsTagsPanel}\r\n        onClose={() => this.updStates('openSettingsTagsPanel')}\r\n        aria-labelledby=\"form-dialog-settings-icons\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{this.props.param.text.settingsTagsPanelTitle}</DialogTitle>\r\n        <Divider />\r\n\r\n        <DialogContent >\r\n          <Box\r\n            component=\"ul\"\r\n            className={\"clear-list\"}\r\n          >\r\n            {groupsTagList}\r\n          </Box>\r\n        </DialogContent>\r\n\r\n        <Divider />\r\n        <DialogActions>\r\n          <Button onClick={() => this.updStates('openSettingsTagsPanel')} >\r\n            {this.props.param.buttons.cancel}\r\n          </Button>\r\n          <Button onClick={this.saveNewSettings} color=\"secondary\">\r\n            {this.props.param.buttons.save}\r\n          </Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n    )\r\n  }\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: deepPurple,\r\n    secondary: blue,\r\n    warning: deepPurple,\r\n  },\r\n\r\n  typography: {\r\n    fontSize: 14,\r\n  },\r\n\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        minWidth: '40px'\r\n      }\r\n    }\r\n  }\r\n});","// React\r\nimport React from \"react\";\r\n\r\n// Мои компоненты\r\nimport EditorPanel from \"./components/EditorPanel\";\r\nimport ContentEditable from \"./components/ContentEditable\";\r\nimport HTMLeditable from \"./components/HTMLeditable\";\r\nimport TabContainer from \"./components/TabContainer\";\r\nimport TabSwitches from \"./components/TabSwitches\";\r\nimport Settings from \"./components/Settings\";\r\nimport SettingsTagsPanel from \"./components/SettingsTagsPanel\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport MyTheme from './MyTheme';\r\n\r\nimport { getSelection } from './functions/getSelection';\r\nimport { setAttributeForSelectedText } from './functions/setAttributeForSelectedText';\r\n\r\nimport sanitizeHtml from \"sanitize-html\";\r\nimport pretty from 'pretty';\r\n\r\n\r\n// Стили\r\nimport \"./App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.data;\r\n\r\n    console.log(\"*** Начальные данные ***\\n\", this.state);\r\n    console.log(\"*** Пользовательская тема ***\\n\", MyTheme);\r\n\r\n    this.setGlobalParam = this.setGlobalParam.bind(this);\r\n    this.switchEditText = this.switchEditText.bind(this);\r\n    this.sanitize = this.sanitize.bind(this);\r\n  }\r\n\r\n  // обновить this.state.states\r\n  // если newValue не передан, то значение изменится на противоположное\r\n  // [stateName] - название параметра\r\n  // [newValue]  - новое значение параметра\r\n  updStates = (stateName, newValue) => {\r\n    // если параметр передан\r\n    if (newValue != undefined) {\r\n      this.setState(state => ({\r\n        states: {\r\n          ...state.states,\r\n          // заменить значение на противоположное\r\n          [stateName]: newValue\r\n        }\r\n      }));\r\n    } else {\r\n      this.setState(state => ({\r\n        states: {\r\n          ...state.states,\r\n          // заменить значение на противоположное\r\n          [stateName]: !this.state.states[stateName]\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  // установить глобальные настройки\r\n  setGlobalParam(inputName, e) {\r\n    let value = e.target.value;\r\n\r\n    let isSelected = getSelection().toString();\r\n\r\n    // если есть выделенный текст и изменяется fontSize\r\n    if (isSelected && inputName === 'fontSize') {\r\n      setAttributeForSelectedText(7, 'font-size', `${value}px`); // установить размер выделенного текста\r\n\r\n      // если текст не выделен изменить глобальные параметры\r\n    } else {\r\n      this.setState(state => ({\r\n        styles: {\r\n          ...state.styles,\r\n          [inputName]: [value]\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  // изменить отображаемые теги\r\n  changeDisplayedTags = (newTagsParam) => {\r\n    this.setState(state => ({\r\n      tagParameters: newTagsParam\r\n    }));\r\n  }\r\n\r\n  // вкл/откл возможность редактировать текст\r\n  switchEditText() {\r\n    this.updStates('editText');\r\n\r\n    // если режим редактирования выключен\r\n    if (this.state.states.editText) {\r\n      this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n    }\r\n  }\r\n\r\n  // записать новый текст\r\n  setNewText = (newValue) => {\r\n    // если в качестве параметра передан новый текст\r\n    if (newValue && newValue !== this.state.html) {\r\n      // записать новую версию текста\r\n      this.setState({\r\n        html: newValue\r\n      });\r\n    }\r\n  }\r\n\r\n  // записать новый текст, удалив неразрешённые теги\r\n  sanitize() {\r\n    let editableBlock = document.querySelector(\".content\"); // блок, текст в котором можно редактировать\r\n    let text = editableBlock.innerHTML; // текст вместе с тегами\r\n\r\n    // если текст изменился\r\n    if (text !== this.state.html) {\r\n      let prettyText = pretty(text); // beautifying HTML\r\n\r\n      // записать новую версию текста, применив настройки (удалить пустые теги, заменить символы и пр.)\r\n      this.setState({\r\n        html: sanitizeHtml(prettyText, this.state.sanitizeParam)\r\n      });\r\n    }\r\n  }\r\n\r\n  // переключить активный таб\r\n  tabSwitch = (e, newValue) => {\r\n    this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n    this.updStates('tabActive', newValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={MyTheme}>\r\n        <Box component=\"main\" className=\"App\" >\r\n          {/* панель редактирования */}\r\n          <EditorPanel\r\n            param={this.state}\r\n            setGlobalParam={this.setGlobalParam}\r\n            switchEditText={this.switchEditText}\r\n            tabSwitch={this.tabSwitch}\r\n            dialogLink={this.switchDialogLink}\r\n          />\r\n\r\n\r\n\r\n          <Grid container spacing={0} alignItems=\"center\" justify=\"center\" className=\"tabs-wrap\">\r\n            <Grid item xs={12} md={10} lg={8}>\r\n\r\n              {/* Переключатель вкладок */}\r\n              <TabSwitches\r\n                value={this.state.states.tabActive}\r\n                onChange={this.tabSwitch}\r\n              />\r\n\r\n              {/* Вкладка №1 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={0}\r\n                h2={\"Редактируемый текст\"}>\r\n                <ContentEditable param={this.state} />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №2 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={1}\r\n                h2={\"Редактируемый html\"}>\r\n                <HTMLeditable\r\n                  param={this.state}\r\n                  onChange={this.setNewText}\r\n                />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №3 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={2}\r\n                h2={\"Редактируемые стили\"}>\r\n                <p>Тут будет отображаться css</p>\r\n              </TabContainer>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Settings\r\n          param={this.state}\r\n          updStates={this.updStates}\r\n        />\r\n        \r\n        <SettingsTagsPanel\r\n          param={this.state}\r\n          saveChange={this.changeDisplayedTags}\r\n          updStates={this.updStates}\r\n        />\r\n\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}","// getSelection\r\n\r\n\r\nexport const getSelection = () => {\r\n  if (window.getSelection) {\r\n    return window.getSelection();\r\n\r\n  } else if (document.selection && document.selection.createRange) {\r\n    return document.selection;\r\n  }\r\n  return null;\r\n}","import {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  formatCommand_uppercase,\r\n  formatCommand_lowercase,\r\n  default_bgcolor,\r\n  default_color,\r\n} from './vars';\r\n\r\n// Начальные значения\r\nexport const startingValue = {\r\n  // стили\r\n  styles: {\r\n    fontSize: 16,\r\n    lineHeight: 2.2,\r\n\r\n    bgcolor: default_bgcolor,\r\n    color: default_color,\r\n  },\r\n\r\n  // состояния элементов\r\n  states: {\r\n    editText: true, // вкл/выкл режим редактирования текста\r\n    colorPicker: false, // показать/скрыть панель выбора цвета\r\n    dialogLink: false, // показать/скрыть панель ввода ссылки\r\n\r\n    // какой параметр по-умолчанию изменяет панель выбора цвета\r\n    paletteEdit: formatCommand_bgcolor,\r\n\r\n    tabActive: 0,// какой таб будет активным изначально\r\n\r\n    switchOpenSettings: false, // показывать скрытые иконки SpeedDial\r\n\r\n    openSettingsTagsPanel: false, // показывать скрытые иконки SpeedDial\r\n  },\r\n\r\n  // размеры, которые можно задавать в select\r\n  sizes: {\r\n    fontSize: {\r\n      values: [\r\n        8,\r\n        9,\r\n        10,\r\n        11,\r\n        12,\r\n        14,\r\n        15,\r\n        16,\r\n        17,\r\n        18,\r\n        20,\r\n        24,\r\n        30,\r\n        36,\r\n        48,\r\n      ]\r\n    },\r\n\r\n    lineHeight: {\r\n      values: [\r\n        1.0,\r\n        1.2,\r\n        1.4,\r\n        1.5,\r\n        1.6,\r\n        1.8,\r\n        2.0,\r\n        2.2,\r\n        2.4,\r\n        2.5,\r\n        2.6,\r\n        2.8,\r\n        3.0,\r\n        3.5,\r\n        4.0,\r\n      ]\r\n    },\r\n  },\r\n\r\n  // параметры для sanitize-html\r\n  sanitizeParam: {\r\n    // allowedTags: false, // разрешить все теги\r\n    // разрешённые теги\r\n    allowedTags: [\r\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',\r\n      'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'sub', 'sup', 'span',\r\n      's', 'div', 'font'\r\n    ],\r\n    // разрешённые атрибуты\r\n    allowedAttributes: {\r\n      a: ['href', 'name', 'target'],\r\n      '*': ['style', 'color', 'bgcolor', 'background-color']\r\n    },\r\n    parser: {\r\n      lowerCaseTags: true\r\n    },\r\n    // заменить <x> на <y>\r\n    transformTags: {\r\n      'div': 'p',\r\n      'strong': 'b',\r\n      'em': 'i',\r\n      'strike': 's',\r\n      'font': 'span',\r\n    },\r\n    // удалить пусте теги\r\n    exclusiveFilter: function (frame) {\r\n      return (\r\n        !frame.text.trim()\r\n      );\r\n    },\r\n  },\r\n\r\n  /*\r\n  * команды для редактирования текста\r\n  * если key записан в виде [keyName],\r\n  * то его название нужно менять в файле ./vars.js\r\n  * [эти названия используются где-то ещё в коде]\r\n  */\r\n  tagParameters: {\r\n\r\n    // ******************************\r\n    outside: {\r\n      [formatCommand_clear]: {\r\n        materialize: {\r\n          title: 'Очистить формат',\r\n          iconName: 'FormatClear'\r\n        },\r\n        selected: true,\r\n      },\r\n      undo: {\r\n        command: ['undo', false, ''],\r\n        materialize: {\r\n          title: 'Отменить',\r\n          iconName: 'Undo'\r\n        },\r\n        selected: false,\r\n      },\r\n      redo: {\r\n        command: ['redo', false, ''],\r\n        materialize: {\r\n          title: 'Повторить',\r\n          iconName: 'Redo'\r\n        },\r\n        selected: false,\r\n      },\r\n      p: {\r\n        command: ['formatBlock', false, 'p'],\r\n        materialize: {\r\n          title: 'Параграф',\r\n          iconName: 'TextFormat'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n\r\n    // ******************************\r\n    titles: {\r\n      h1: {\r\n        command: ['formatBlock', false, 'h1'],\r\n        materialize: {\r\n          title: 'Заголовок 1',\r\n          iconName: 'Filter1'\r\n        },\r\n        selected: true,\r\n      },\r\n      h2: {\r\n        command: ['formatBlock', false, 'h2'],\r\n        materialize: {\r\n          title: 'Заголовок 2',\r\n          iconName: 'Filter2'\r\n        },\r\n        selected: true,\r\n      },\r\n      h3: {\r\n        command: ['formatBlock', false, 'h3'],\r\n        materialize: {\r\n          title: 'Заголовок 3',\r\n          iconName: 'Filter3'\r\n        },\r\n        selected: true,\r\n      },\r\n      h4: {\r\n        command: ['formatBlock', false, 'h4'],\r\n        materialize: {\r\n          title: 'Заголовок 4',\r\n          iconName: 'Filter4'\r\n        },\r\n        selected: true,\r\n      },\r\n      h5: {\r\n        command: ['formatBlock', false, 'h5'],\r\n        materialize: {\r\n          title: 'Заголовок 5',\r\n          iconName: 'Filter5'\r\n        },\r\n        selected: true,\r\n      },\r\n      h6: {\r\n        command: ['formatBlock', false, 'h6'],\r\n        materialize: {\r\n          title: 'Заголовок 6',\r\n          iconName: 'Filter6'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n\r\n\r\n\r\n    // ******************************\r\n    textStyle: {\r\n      b: {\r\n        command: ['bold', false, ''],\r\n        materialize: {\r\n          title: 'Полужирный',\r\n          iconName: 'FormatBold'\r\n        },\r\n        selected: true,\r\n      },\r\n      i: {\r\n        command: ['italic', false, ''],\r\n        materialize: {\r\n          title: 'Курсив',\r\n          iconName: 'FormatItalic'\r\n        },\r\n        selected: true,\r\n      },\r\n      underline: {\r\n        command: ['underline', false, ''],\r\n        materialize: {\r\n          title: 'Подчёркнутый текст',\r\n          iconName: 'FormatUnderlined'\r\n        },\r\n        selected: true,\r\n      },\r\n      strike: {\r\n        command: ['strikeThrough', false, ''],\r\n        materialize: {\r\n          title: 'Зачёркнутый текст',\r\n          iconName: 'StrikethroughS'\r\n        },\r\n        selected: true,\r\n      },\r\n      [formatCommand_bgcolor]: {\r\n        materialize: {\r\n          title: 'Цвет фона',\r\n          iconName: 'FormatColorFill'\r\n        },\r\n        selected: true,\r\n      },\r\n      [formatCommand_color]: {\r\n        materialize: {\r\n          title: 'Цвет текста',\r\n          iconName: 'FormatColorText'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textPositioning: {\r\n      left: {\r\n        command: ['justifyLeft', false, ''],\r\n        materialize: {\r\n          title: 'По левому краю',\r\n          iconName: 'FormatAlignLeft'\r\n        },\r\n        selected: true,\r\n      },\r\n      center: {\r\n        command: ['justifyCenter', false, ''],\r\n        materialize: {\r\n          title: 'По центру',\r\n          iconName: 'FormatAlignCenter'\r\n        },\r\n        selected: true,\r\n      },\r\n      right: {\r\n        command: ['justifyRight', false, ''],\r\n        materialize: {\r\n          title: 'По правому краю',\r\n          iconName: 'FormatAlignRight'\r\n        },\r\n        selected: true,\r\n      },\r\n      full: {\r\n        command: ['justifyFull', false, ''],\r\n        materialize: {\r\n          title: 'По ширине',\r\n          iconName: 'FormatAlignJustify'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textIndents: {\r\n      ul: {\r\n        command: ['insertUnorderedList', false, ''],\r\n        materialize: {\r\n          title: 'Маркированный список',\r\n          iconName: 'FormatListBulleted'\r\n        },\r\n        selected: true,\r\n      },\r\n      ol: {\r\n        command: ['insertOrderedList', false, ''],\r\n        materialize: {\r\n          title: 'Нумерованный список',\r\n          iconName: 'FormatListNumbered'\r\n        },\r\n        selected: true,\r\n      },\r\n      indent: {\r\n        command: ['indent', false, ''],\r\n        materialize: {\r\n          title: 'Добавить отступ',\r\n          iconName: 'FormatIndentIncrease'\r\n        },\r\n        selected: true,\r\n      },\r\n      outdent: {\r\n        command: ['outdent', false, ''],\r\n        materialize: {\r\n          title: 'Убрать отступ',\r\n          iconName: 'FormatIndentDecrease'\r\n        },\r\n        selected: true,\r\n      },\r\n      blockquote: {\r\n        command: ['formatBlock', false, 'blockquote'],\r\n        materialize: {\r\n          title: 'Цитата',\r\n          iconName: 'FormatQuote'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    adding: {\r\n      hr: {\r\n        command: ['insertHorizontalRule', false, ''],\r\n        materialize: {\r\n          title: 'Горизонтальная черта',\r\n          iconName: 'Remove'\r\n        },\r\n        selected: true,\r\n      },\r\n      [formatCommand_link]: {\r\n        materialize: {\r\n          title: 'Ссылка',\r\n          iconName: 'Link'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    register: {\r\n      sup: {\r\n        command: ['superscript', false, ''],\r\n        materialize: {\r\n          title: 'Надстрочный',\r\n          iconName: 'VerticalAlignTop'\r\n        },\r\n        selected: true,\r\n      },\r\n      sub: {\r\n        command: ['subscript', false, ''],\r\n        materialize: {\r\n          title: 'Подстрочный',\r\n          iconName: 'VerticalAlignBottom'\r\n        },\r\n        selected: true,\r\n      },\r\n      [formatCommand_uppercase]: {\r\n        materialize: {\r\n          title: 'ВЕРХНИЙ РЕГИСТР',\r\n          iconName: 'TextRotateUp'\r\n        },\r\n        selected: true,\r\n      },\r\n      [formatCommand_lowercase]: {\r\n        materialize: {\r\n          title: 'нижний регистр',\r\n          iconName: 'TextRotateVertical'\r\n        },\r\n        selected: true,\r\n      },\r\n    },\r\n  },\r\n\r\n  // просто текст\r\n  text: {\r\n    settingsTagsPanelTitle: 'Отображаемые на панели иконки',\r\n  },\r\n\r\n\r\n  // текст кнопок\r\n  buttons: {\r\n    edit: 'Режим редактирования текста',\r\n    reset: 'Вернуть стандартные настройки',\r\n    undo: 'Отменить',\r\n    redo: 'Повторить',\r\n    download: 'Скачать текст с тегами',\r\n    print: 'Напечатать текст',\r\n    text: 'text',\r\n    html: 'html',\r\n    css: 'css',\r\n    close: 'Закрыть',\r\n    send: 'Отправить',\r\n    cancel: 'Отменить',\r\n    save: 'Сохранить',\r\n  },\r\n\r\n  // текст полей ввода\r\n  inputs: {\r\n    fontSize: 'Размер шрифта',\r\n    lineHeight: 'Межстрочный интервал',\r\n  },\r\n\r\n  // текст в редактируемом блоке\r\n  html: `\r\n  <p>v3</p>\r\n  <p><b>Редактируемый текст</b></p>\r\n  <p>Текст и его стили можно изменять, нажав на кнопку <b>Режим редактирования текста</b>.</p>\r\n  <p>Очистить формат текста можно, нажав на <b>clearFormat</b>.</p>\r\n  <p>Аксиома <s>силлогизма</s>, по определению, представляет собой неоднозначный предмет деятельности.\r\n    Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n    Созерцание <i>непредсказуемо</i>. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n    Апостериори, гравитационный парадокс <sup>амбивалентно</sup> понимает\r\n  </p>\r\n  <h2>Заголовок</h2>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n    Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n    Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n    Апостериори, гравитационный парадокс амбивалентно понимает\r\n  </p>\r\n  <ul>\r\n    <li>Аксиома</li>\r\n    <li>силлогизма</li>\r\n    <li>по определению</li>\r\n  </ul>\r\n  <blockquote>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n    Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n    Созерцание непредсказуемо. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n    Апостериори, гравитационный парадокс амбивалентно понимает\r\n  </blockquote>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n    Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n    Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n    Апостериори, гравитационный парадокс амбивалентно понимает\r\n  </p>\r\n  `\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport { startingValue } from './startingValue';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Начальные значения\r\nconst data = startingValue;\r\n\r\nReactDOM.render(<App data={data} />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}