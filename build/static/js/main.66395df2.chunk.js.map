{"version":3,"sources":["functions/getSelectionRange.js","components/tagsPanel.js","vars.js","components/buttonsPanel.js","MyTheme.js","components/mainSettingsPanel.js","components/dialogLink.js","functions/restoreSelection.js","components/editorPanel.js","components/contentEditable.js","components/htmlEditable.js","components/tabContainer.js","components/tabSwitches.js","App.js","startingValue.js","serviceWorker.js","index.js"],"names":["getSelectionRange","window","getSelection","sel","getRangeAt","rangeCount","document","selection","createRange","TagsPanel","props","showDialogLink","setTag","bind","clearFormat","group","tag","this","editAllowed","commands","param","tagParameters","command","i","length","selectionRange","toString","execCommand","styles","bgcolor","color","toUpperCase","console","log","container","parentElement","select","startContainer","parentNode","nodeName","outerHTML","innerHTML","groupsTagArray","Object","keys","groupsTagList","map","groupIndex","groupTags","tagList","index","cuttentTag","materialize","iconName","Icon","IconsLib","key","size","aria-label","title","name","onClick","Box","className","component","Divider","orientation","Tabs","variant","value","React","Component","ButtonsPanel","state","setGlobalParam","reset","download","undo","redo","print","states","editText","alert","block","querySelector","link","createElement","file","Blob","type","href","URL","createObjectURL","click","buttons","createMuiTheme","palette","primary","deepPurple","secondary","blue","warning","MainSettingsPanel","eventHandler","switchEditText","fontSizeList","sizes","fontSize","values","elem","MenuItem","lineHeightList","lineHeight","FormControlLabel","control","Switch","checked","onChange","edit","FormControl","Select","labelId","id","DialogLink","isOpen","switchDialogLink","addLinkUrl","createRef","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","ref","fullWidth","DialogActions","Button","current","lastChild","restoreSelection","range","removeAllRanges","addRange","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","EditorPanel","selectedText","setState","tabSwitch","dialogLink","handleChange","switchShowColorPiper","changeColor","paletteEdit","hex","colorPicker","AppBar","position","Paper","startIcon","style","backgroundColor","tags","tabActive","Modal","aria-describedby","endIcon","ContentEditable","tabIndex","contentEditable","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","html","HTMLeditable","onBlur","TabContainer","other","h2","Typography","role","hidden","TabSwitches","indicatorColor","textColor","centered","Tab","icon","disabled","App","e","newValue","sanitize","data","MyTheme","inputName","querySelectorAll","forEach","text","tagName","innerText","sanitizeHtml","sanitizeParam","theme","Grid","spacing","alignItems","justify","item","xs","md","lg","startingValue","allowedTags","allowedAttributes","a","parser","lowerCaseTags","transformTags","exclusiveFilter","frame","trim","outside","titles","h1","h3","h4","h5","h6","textStyle","b","underline","strike","textPositioning","left","center","right","full","textIndents","ul","ol","indent","outdent","blockquote","adding","hr","register","sup","sub","css","inputs","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66395df2.chunk.js","sourcesContent":["// Возвращает выделенный текст\r\n\r\n\r\nexport const getSelectionRange = () => {\r\n  if (window.getSelection) {\r\n    var sel = window.getSelection();\r\n    if (sel.getRangeAt && sel.rangeCount) {\r\n      return sel.getRangeAt(0);\r\n    }\r\n  } else if (document.selection && document.selection.createRange) {\r\n    return document.selection.createRange();\r\n  }\r\n  return null;\r\n}","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { getSelectionRange } from '../functions/getSelectionRange';\r\n\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nimport {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link\r\n} from \"../vars\";\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class TagsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.state = props.param;\r\n\r\n    this.showDialogLink = this.props.showDialogLink;\r\n    this.setTag = this.setTag.bind(this);\r\n    this.clearFormat = this.clearFormat.bind(this);\r\n  }\r\n\r\n  // установить тег (форматирование текста)\r\n  setTag(group, tag) {\r\n\r\n    // ничего не делать, если это не первая вкладка\r\n    if (!this.props.editAllowed) return false;\r\n\r\n    let commands = this.props.param.tagParameters[group][tag].command; // команды, прописанные для этого тега\r\n\r\n    // если команды для этого тега существуют\r\n    if (commands) {\r\n      // применить все заданные команды из массива\r\n      for (let i = 0; i < commands.length; i++) {\r\n        // *** document.execCommand('Название команды', false, значение (если требуется));\r\n\r\n        // если нужно вводить адрес ссылки\r\n        if (tag === formatCommand_link) {\r\n          let selectionRange = getSelectionRange(); // записать выделенный текст\r\n\r\n          // если есть выделенный текст\r\n          if (selectionRange.toString().length > 0) {\r\n            this.showDialogLink(selectionRange); // вызвать модальное окно ввода url\r\n          }\r\n\r\n          // если нужно выбрать цвет фона\r\n        } else if (tag === formatCommand_bgcolor) {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            this.props.param.styles.bgcolor\r\n          );\r\n\r\n          // если нужно выбрать цвет текста\r\n        } else if (i === 1 && tag === formatCommand_color) {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            this.props.param.styles.color\r\n          );\r\n\r\n          // [default] просто стилизовать текст\r\n        } else {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            commands[i][2].toUpperCase()\r\n          );\r\n        }\r\n      }\r\n\r\n      // если нужно очистить формат\r\n      if (tag === formatCommand_clear) {\r\n        this.clearFormat();\r\n      }\r\n\r\n      // если команды для этого тега НЕ существуют\r\n    } else {\r\n      console.log(\r\n        \"Правила форматирования для этого тега не прописаны.\\nСделайте это в файле startingValue.js\"\r\n      );\r\n    }\r\n  }\r\n\r\n  //  очистить формат, удалив родительский тег\r\n  clearFormat() {\r\n    let container = null; // блок, с которым работаем\r\n    // если выделен (для IE)\r\n    if (document.selection) {\r\n      // записать выделенный текст\r\n      container = document.selection.createRange().parentElement();\r\n    }\r\n    // если выделен\r\n    else {\r\n      // диапазон текста, который пользователь выделил на странице\r\n      let select = window.getSelection();\r\n\r\n      // если количество диапазонов в выделении > 0\r\n      if (select.rangeCount > 0) {\r\n        // записать выделенный текст\r\n        container = select.getRangeAt(0).startContainer.parentNode;\r\n      }\r\n    }\r\n\r\n    // если этот элемент не div и не li\r\n    // *** пояснение:\r\n    // * [div] -> чтобы нельзя было удалить сам блок .content при выделении всего содержимого\r\n    // * [li] -> чтобы нельзя было убирать формат списков (слишком много багов из-за этого)\r\n    if (container.nodeName !== \"DIV\" && container.nodeName !== \"LI\") {\r\n      container.outerHTML = container.innerHTML; // удалить родительский тег\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // преобразовать объект в массив ключей, чтобы можно было использовать .map\r\n    let tagParameters = this.props.param.tagParameters;\r\n    let groupsTagArray = Object.keys(tagParameters);\r\n\r\n    let groupsTagList = groupsTagArray.map((group, groupIndex) => {\r\n\r\n      let groupTags = tagParameters[group];\r\n      let groupTagKeys = Object.keys(groupTags);\r\n\r\n      let tagList = groupTagKeys.map((tag, index) => {\r\n        let cuttentTag = tagParameters[group][tag];\r\n\r\n        if (cuttentTag.materialize) {\r\n          let iconName = cuttentTag.materialize.iconName;\r\n          let Icon = IconsLib[iconName];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                aria-label={cuttentTag.materialize.title}\r\n                title={cuttentTag.materialize.title}\r\n                name={tag}\r\n                onClick={() => this.setTag(group, tag)}\r\n\r\n              >\r\n                <Icon />\r\n              </IconButton>\r\n            </li>\r\n          );\r\n\r\n        };\r\n\r\n      });\r\n      return (\r\n        <Box\r\n          key={groupIndex}\r\n          aria-label=\"li item scrollable horizontal tabs\"\r\n          className={\"clear-list tag-list\"}\r\n        >\r\n          <Box\r\n            component=\"ul\"\r\n            aria-label=\"ul items\"\r\n            className={\"tag-list clear-list\"}>\r\n            {tagList}\r\n          </Box>\r\n          {/* После последнего элемента не добавлять черту */}\r\n          {(groupsTagArray.length - 1 !== groupIndex) &&\r\n            <Divider orientation=\"vertical\" />\r\n          }\r\n        </Box>\r\n      );\r\n    });\r\n\r\n\r\n    return (\r\n      <Tabs\r\n        aria-label=\"outlined primary button li group\"\r\n        className={\"tag-list tag-list-wp clear-list scrollbar--center\"}\r\n        orientation=\"horizontal\"\r\n        variant=\"scrollable\"\r\n        value={0}\r\n      >\r\n        {groupsTagList}\r\n      </Tabs>\r\n\r\n    )\r\n  }\r\n}\r\n","// переменные \r\n\r\nexport const formatCommand_clear = 'clearFormat';\r\nexport const formatCommand_bgcolor = 'bgcolor';\r\nexport const formatCommand_color = 'color';\r\nexport const formatCommand_link = 'link';\r\n\r\n\r\nexport const default_bgcolor = '#ffeb3b';\r\nexport const default_color = '#f44336';","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\n// настройка тегов\r\nexport default class ButtonsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.reset = props.reset;\r\n    // this.switchEditText = props.switchEditText;\r\n\r\n    this.download = this.download.bind(this);\r\n    this.undo = this.undo.bind(this);\r\n    this.redo = this.redo.bind(this);\r\n    this.print = this.print.bind(this);\r\n  }\r\n\r\n  // скачать отредактированный текст\r\n  download() {\r\n    // если режим редактирования выключен\r\n    if (!this.props.param.states.editText) {\r\n      let editableBlock = document.querySelector(\".content\"); // блок, текст в котором можно редактировать\r\n      let block = editableBlock.outerHTML; // текст внутри блока\r\n\r\n      let link = document.createElement(\"a\"); // сгенерировать ссылку\r\n      let file = new Blob([block], { type: \"txt\" }); // сгенерировать файл\r\n      link.href = URL.createObjectURL(file); // сгенерировать href\r\n      link.download = \"text.txt\"; // название и расширение файла\r\n      link.click(); // имитировать нажатие на ссылку\r\n\r\n      // если режим редактирования НЕ выключен\r\n    } else {\r\n      alert(\r\n        \"Перед скачиванием нужно выйти из режима редактирования.\\nИначе параметры редактирования не будут применены к тексту\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  undo() {\r\n    document.execCommand(\"undo\"); // Отмена последнего действия\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  redo() {\r\n    document.execCommand(\"redo\"); // Повтор последнего действия\r\n  }\r\n\r\n  // напечатать текст/код\r\n  print() {\r\n    window.print();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box className=\"box-margin\">\r\n        {/* КНОПКА Отменить */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.undo}\r\n          title={this.props.param.buttons.undo}\r\n          onClick={this.undo}\r\n        >\r\n          <IconsLib.Undo />\r\n        </IconButton>\r\n\r\n\r\n        {/* КНОПКА Повторить */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.redo}\r\n          title={this.props.param.buttons.redo}\r\n          onClick={this.redo}\r\n        >\r\n          <IconsLib.Redo />\r\n        </IconButton>\r\n\r\n\r\n        {/* КНОПКА скачать */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.download}\r\n          title={this.props.param.buttons.download}\r\n          onClick={this.download}\r\n        >\r\n          <IconsLib.GetApp />\r\n        </IconButton>\r\n\r\n\r\n\r\n        {/* КНОПКА печать */}\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label={this.props.param.buttons.print}\r\n          title={this.props.param.buttons.print}\r\n          onClick={this.print}\r\n        >\r\n          <IconsLib.Print />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: deepPurple,\r\n    secondary: blue,\r\n    warning: deepPurple,\r\n  },\r\n});","import React from \"react\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport MyTheme from '../MyTheme';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class MainSettingsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.eventHandler = props.eventHandler;\r\n    this.reset = props.reset;\r\n    this.switchEditText = props.switchEditText;\r\n  }\r\n\r\n  render() {\r\n    let fontSizeValues = this.props.param.sizes.fontSize.values;\r\n    let fontSizeList = fontSizeValues.map((elem, index) => {\r\n      return (\r\n        <MenuItem key={index} value={elem}>{elem}</MenuItem>\r\n      );\r\n    });\r\n\r\n    let lineHeightValues = this.props.param.sizes.lineHeight.values;\r\n    let lineHeightList = lineHeightValues.map((elem, index) => {\r\n      return (\r\n        <MenuItem key={index} value={elem}>{elem}</MenuItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Box className=\"flex-block child-margin box-margin\" >\r\n        {/* КНОПКА Режим редактирования текста */}\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={this.props.param.states.editText}\r\n              onChange={this.switchEditText}\r\n              title={this.props.param.buttons.edit}\r\n              value=\"edit\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n        />\r\n\r\n\r\n        {/* Размер текста */}\r\n        <FormControl >\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            size=\"small\"\r\n            onChange={value => this.eventHandler(\"fontSize\", value)}\r\n            value={this.props.param.styles.fontSize}\r\n          >\r\n            {fontSizeList}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Высота строки */}\r\n        <FormControl >\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            size=\"small\"\r\n            onChange={value => this.eventHandler(\"lineHeight\", value)}\r\n            value={this.props.param.styles.lineHeight}\r\n          >\r\n            {lineHeightList}\r\n          </Select>\r\n        </FormControl>\r\n\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","// dialogLink\r\n\r\nimport React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// панель редактирования\r\nexport default class DialogLink extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.isOpen;\r\n\r\n    this.switchDialogLink = props.switchDialogLink;\r\n    this.addLinkUrl = props.addLinkUrl;\r\n\r\n    this.href = React.createRef();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen ? true : false}\r\n        onClose={this.switchDialogLink}\r\n        aria-labelledby=\"form-dialog-link-url\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-link-url\">Введите адрес ссылки</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"link-url\"\r\n            label=\"Адрес ссылки\"\r\n            type=\"url\"\r\n            ref={this.href}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.switchDialogLink} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n          <Button onClick={() => this.addLinkUrl(this.href.current.lastChild.lastChild.value)} color=\"primary\">\r\n            Отправить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","// востанавливает выделенную область\r\n\r\nexport const restoreSelection = (range) => {\r\n  if (range) {\r\n    if (window.getSelection) {\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (document.selection && range.select) {\r\n      range.select();\r\n    }\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport { SwatchesPicker } from \"react-color\";\r\n\r\n\r\nimport TagsPanel from \"./tagsPanel\";\r\nimport ButtonsPanel from \"./buttonsPanel\";\r\nimport MainSettingsPanel from \"./mainSettingsPanel\";\r\nimport DialogLink from \"./dialogLink\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nimport { restoreSelection } from '../functions/restoreSelection';\r\n\r\nimport {\r\n  // formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  // default_bgcolor,\r\n  // default_color,\r\n} from \"../vars\";\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\n\r\n// панель редактирования\r\nexport default class EditorPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.switchEditText = props.switchEditText;\r\n    this.tabSwitch = props.tabSwitch;\r\n    this.dialogLink = props.dialogLink;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.switchShowColorPiper = this.switchShowColorPiper.bind(this);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.switchDialogLink = this.switchDialogLink.bind(this);\r\n  }\r\n\r\n  // при изменении выбранного цвета в палитре\r\n  handleChange(color) {\r\n    this.setState(state => ({\r\n      styles: {\r\n        ...state.styles,\r\n        [state.states.paletteEdit]: color.hex // изменить цвет для палитры\r\n      }\r\n    }));\r\n  }\r\n\r\n  // смена статуса панели выбора цвета [показать/скрыть]\r\n  switchShowColorPiper() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        colorPicker: !state.states.colorPicker\r\n      }\r\n    }));\r\n  }\r\n\r\n  // при открытии панели выбора цвета, нажатием на палитру\r\n  changeColor(param) {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        paletteEdit: param // изменить палитру, которую сейчас редактируем\r\n      }\r\n    }));\r\n\r\n    this.switchShowColorPiper();\r\n  }\r\n\r\n  // показать/скрыть диалог ввода ссылки\r\n  switchDialogLink(selectedText) {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        // заменить значение на противоположное\r\n        dialogLink: !this.state.states.dialogLink\r\n      },\r\n      selectedText: selectedText\r\n    }));\r\n  }\r\n\r\n  // добавить ссылку\r\n  addLinkUrl = (href) => {\r\n    this.switchDialogLink(); // закрыть модальное окно\r\n\r\n    // если выделенный ранее текст записан\r\n    if (this.state.selectedText) {\r\n      restoreSelection(this.state.selectedText); // восстановить выделение\r\n\r\n      document.execCommand('createLink', false, href); // добавить ссылку\r\n\r\n      this.setState(state => ({\r\n        selectedText: ''\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ElevationScroll>\r\n        <AppBar\r\n          component={'header'}\r\n          position=\"fixed\"\r\n          color=\"inherit\"\r\n        >\r\n          <h2 className=\"meta-title\">Панель редактирования</h2>\r\n          <Paper className={\"editor-panel-wp editor-panel__inner\"}>\r\n            <Tabs\r\n              aria-label=\"outlined primary button li group\"\r\n              className={\"scrollbar--center\"}\r\n              orientation=\"horizontal\"\r\n              variant=\"scrollable\"\r\n              value={0}\r\n            >\r\n\r\n              {/* основные настройки */}\r\n              <MainSettingsPanel\r\n                param={this.props.param}\r\n                eventHandler={this.setGlobalParam}\r\n                reset={this.reset}\r\n                switchEditText={this.switchEditText}\r\n              />\r\n              <Box>\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n\r\n              {/* панель с кнопками */}\r\n              <ButtonsPanel\r\n                param={this.props.param}\r\n              />\r\n\r\n              <Box>\r\n                <Divider orientation=\"vertical\" />\r\n              </Box>\r\n\r\n              <Box className=\"box-margin\">\r\n                {/* Выбор цвета фона */}\r\n                <Button\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  title=\"Установить цвет фона\"\r\n                  onClick={() => this.changeColor(formatCommand_bgcolor)}\r\n                  startIcon={<IconsLib.FormatColorFill color=\"inherit\" />}\r\n                >\r\n                  <span\r\n                    className={\"button-pallet__color\"}\r\n                    style={{ backgroundColor: this.state.styles.bgcolor }}>\r\n                  </span>\r\n                </Button>\r\n\r\n                {/* Выбор цвета текста */}\r\n                <Button\r\n                  size=\"large\"\r\n                  color=\"primary\"\r\n                  title=\"Установить цвет текста\"\r\n                  onClick={() => this.changeColor(formatCommand_color)}\r\n                  startIcon={<IconsLib.FormatColorText />}\r\n                >\r\n                  <span\r\n                    className={\"button-pallet__color\"}\r\n                    style={{ backgroundColor: this.state.styles.color }}>\r\n                  </span>\r\n                </Button>\r\n              </Box>\r\n\r\n            </Tabs>\r\n\r\n\r\n            <Divider />\r\n            <TagsPanel\r\n              param={this.state}\r\n              tags={\"tagParameters_outside\"}\r\n              editAllowed={\r\n                this.props.param.states.tabActive == \"0\" ? true : false\r\n              }\r\n              switchShowColorPiper={this.switchShowColorPiper}\r\n              showDialogLink={this.switchDialogLink}\r\n            />\r\n\r\n\r\n\r\n            {/* Панель выбора цвета */}\r\n            <Modal\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n              open={this.state.states.colorPicker}\r\n              onClose={this.switchShowColorPiper}\r\n            >\r\n\r\n              <div className={\"color-picker-wp\"}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  label=\"Закрыть\"\r\n                  aria-label=\"close\"\r\n                  onClick={this.switchShowColorPiper}\r\n                  size=\"medium\"\r\n                  className={\"color-picker-wp__close\"}\r\n                  endIcon={<IconsLib.HighlightOff />}\r\n                >\r\n                  Закрыть\r\n                </Button>\r\n\r\n                <SwatchesPicker\r\n                  onChange={this.handleChange}\r\n                  color={this.state.styles.bgcolor}\r\n                />\r\n              </div>\r\n            </Modal>\r\n\r\n            <DialogLink\r\n              isOpen={this.state.states.dialogLink}\r\n              switchDialogLink={this.switchDialogLink}\r\n              addLinkUrl={this.addLinkUrl}\r\n            />\r\n          </Paper>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class ContentEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n  }\r\n\r\n  render() {\r\n    let createContent = () => {\r\n      return { __html: this.props.param.html };\r\n    }\r\n    return (\r\n      <div\r\n        tabIndex={this.props.param.states.editText ? '0' : null}\r\n        contentEditable={this.props.param.states.editText ? 'true' : 'false'}\r\n        suppressContentEditableWarning={true} // чтобы убрать в консоли предупреждение о contentEditable\r\n        className={this.props.param.states.editText ? 'content print edit' : 'print content'}\r\n        dangerouslySetInnerHTML={createContent()} // вставить переданный текст\r\n        style={{\r\n          fontSize: `${this.props.param.styles.fontSize}px`,\r\n          lineHeight: `${this.props.param.styles.lineHeight}em`\r\n        }}\r\n      >\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class HTMLeditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.onBlur = this.props.onBlur;\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <pre>\r\n        <code\r\n          tabIndex=\"0\"\r\n          contentEditable={this.props.param.states.editText ? 'true' : 'false'}\r\n          suppressContentEditableWarning={true} // чтобы убрать в консоли предупреждение о contentEditable\r\n          className={this.props.param.states.editText ? 'content edit' : 'content'}\r\n          onChange={this.onChange} // \r\n          onBlur={this.onBlur} // событие при потере фокуса \r\n        >\r\n          {this.props.param.html}\r\n        </code>\r\n      </pre>\r\n    );\r\n  }\r\n};","// tabContent\r\n\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class TabContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { children, value, index, ...other } = this.props;\r\n\r\n    return (\r\n      <Paper\r\n        component=\"section\">\r\n        <header className=\"meta-title\">\r\n          <h2>{this.props.h2}</h2>\r\n        </header>\r\n\r\n        <Typography\r\n          component=\"div\"\r\n          role=\"tabpanel\"\r\n          hidden={value !== index}\r\n          id={`simple-tabpanel-${index}`}\r\n          aria-labelledby={`simple-tab-${index}`}\r\n          {...other}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n}","// tabSwitches\r\n\r\nimport React from 'react';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// настройка тегов\r\nexport default class TabSwitches extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Paper component={\"nav\"}>\r\n        <Tabs\r\n          className={\"clear-list\"}\r\n          value={this.props.value}\r\n          onChange={this.onChange}\r\n          aria-label=\"simple tabs example\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab\r\n            // label=\"Текст\"\r\n            icon={<IconsLib.Subject />}\r\n            aria-label=\"Режим просмотра текста\"\r\n            title=\"Режим просмотра текста\" />\r\n          <Tab\r\n            // label=\"HTML\"\r\n            icon={<IconsLib.SettingsEthernet />}\r\n            aria-label=\"Режим просмотра HTML\"\r\n            title=\"Режим просмотра HTML\" />\r\n          <Tab\r\n            // label=\"CSS\"\r\n            icon={<IconsLib.Texture />}\r\n            aria-label=\"Режим просмотра CSS\"\r\n            title=\"Режим просмотра CSS\"\r\n            disabled\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n    )\r\n  }\r\n}","// React\r\nimport React from \"react\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\n// Мои компоненты\r\nimport EditorPanel from \"./components/editorPanel\";\r\nimport ContentEditable from \"./components/contentEditable\";\r\n\r\nimport HTMLeditable from \"./components/htmlEditable\";\r\nimport TabContainer from \"./components/tabContainer\";\r\nimport TabSwitches from \"./components/tabSwitches\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport MyTheme from './MyTheme';\r\n\r\n// Стили\r\nimport \"./App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.data;\r\n\r\n    console.log(\"*** Начальные данные ***\\n\", this.state);\r\n    console.log(\"*** Пользовательская тема ***\", MyTheme);\r\n\r\n    this.setGlobalParam = this.setGlobalParam.bind(this);\r\n    this.switchEditText = this.switchEditText.bind(this);\r\n    this.sanitize = this.sanitize.bind(this);\r\n  }\r\n\r\n  // установить глобальные настройки\r\n  setGlobalParam(inputName, e) {\r\n    let value = e.target.value;\r\n\r\n    this.setState(state => ({\r\n      styles: {\r\n        ...state.styles,\r\n        [inputName]: [value]\r\n      }\r\n    }));\r\n  }\r\n\r\n  // вкл/откл возможность редактировать текст\r\n  switchEditText() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        // заменить значение на противоположное\r\n        editText: !this.state.states.editText\r\n      }\r\n    }));\r\n\r\n    // если режим редактирования выключен\r\n    if (this.state.states.editText) {\r\n      this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n    }\r\n  }\r\n\r\n  // записать новый текст, удалив неразрешённые теги\r\n  sanitize() {\r\n    let editableBlock = document.querySelectorAll(\".content\"); // блок, текст в котором можно редактировать\r\n\r\n    editableBlock.forEach(elem => {\r\n      let text = elem.tagName !== \"CODE\" ? elem.innerHTML : elem.innerText; // текст внутри блока\r\n\r\n      // если текст изменился\r\n      if (text !== this.state.html) {\r\n        // записать новую версию текста, применив настройки (удалить пустые теги, заменить символы и пр.)\r\n        this.setState({\r\n          html: sanitizeHtml(text, this.state.sanitizeParam)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // переключить активный таб\r\n  tabSwitch = (e, newValue) => {\r\n    this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        tabActive: newValue\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={MyTheme}>\r\n        <Box component=\"main\" className=\"App\" >\r\n          {/* панель редактирования */}\r\n          <EditorPanel\r\n            param={this.state}\r\n            setGlobalParam={this.setGlobalParam}\r\n            switchEditText={this.switchEditText}\r\n            tabSwitch={this.tabSwitch}\r\n            dialogLink={this.switchDialogLink}\r\n          />\r\n\r\n          <Grid container spacing={0} alignItems=\"center\" justify=\"center\" className=\"tabs-wrap\">\r\n            <Grid item xs={12} md={10} lg={8}>\r\n\r\n              {/* Переключатель вкладок */}\r\n              <TabSwitches\r\n                value={this.state.states.tabActive}\r\n                onChange={this.tabSwitch}\r\n              />\r\n\r\n              {/* Вкладка №1 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={0}\r\n                h2={\"Редактируемый текст\"}>\r\n                <ContentEditable param={this.state} />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №2 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={1}\r\n                h2={\"Редактируемый html\"}>\r\n                <HTMLeditable param={this.state} />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №3 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={2}\r\n                h2={\"Редактируемые стили\"}>\r\n                <p>Тут будет отображаться css</p>\r\n              </TabContainer>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}","import {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  default_bgcolor,\r\n  default_color,\r\n} from './vars';\r\n\r\n// Начальные значения\r\nexport const startingValue = {\r\n  // стили\r\n  styles: {\r\n    fontSize: 16,\r\n    lineHeight: 2.2,\r\n\r\n    bgcolor: default_bgcolor,\r\n    color: default_color,\r\n  },\r\n\r\n  // состояния элементов\r\n  states: {\r\n    editText: true, // вкл/выкл режим редактирования текста\r\n    colorPicker: false, // показать/скрыть панель выбора цвета\r\n    dialogLink: false, // показать/скрыть панель ввода ссылки\r\n\r\n    // какой параметр по-умолчанию изменяет панель выбора цвета\r\n    paletteEdit: formatCommand_bgcolor,\r\n\r\n    // какой таб будет активным изначально\r\n    tabActive: 0\r\n  },\r\n\r\n  sizes: {\r\n    fontSize: {\r\n      values: [\r\n        8,\r\n        9,\r\n        10,\r\n        11,\r\n        12,\r\n        14,\r\n        15,\r\n        16,\r\n        17,\r\n        18,\r\n        20,\r\n        24,\r\n        30,\r\n        36,\r\n        48,\r\n      ]\r\n    },\r\n\r\n    lineHeight: {\r\n      values: [\r\n        1.0,\r\n        1.2,\r\n        1.4,\r\n        1.5,\r\n        1.6,\r\n        1.8,\r\n        2.0,\r\n        2.2,\r\n        2.4,\r\n        2.5,\r\n        2.6,\r\n        2.8,\r\n        3.0,\r\n        3.5,\r\n        4.0,\r\n      ]\r\n    },\r\n  },\r\n\r\n  // параметры для sanitize-html\r\n  sanitizeParam: {\r\n    // разрешённые в редактируемом блоке теги\r\n    allowedTags: false, // разрешить все теги\r\n    // allowedTags: [\r\n    //   'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',\r\n    //   'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'sub', 'sup', 'span'\r\n    // ],\r\n    // разрешённые атрибуты\r\n    allowedAttributes: {\r\n      a: ['href', 'name', 'target'],\r\n      '*': ['style', 'color', 'bgcolor', 'background-color']\r\n    },\r\n    parser: {\r\n      lowerCaseTags: true\r\n    },\r\n    // заменить <x> на <y>\r\n    transformTags: {\r\n      'div': 'p',\r\n      'br': '',\r\n      'strong': 'b',\r\n      'em': 'i',\r\n      'strike': 's',\r\n    },\r\n    // удалить пусте теги\r\n    exclusiveFilter: function (frame) {\r\n      return (\r\n        !frame.text.trim()\r\n      );\r\n    },\r\n  },\r\n\r\n  /*\r\n  * команды для редактирования текста\r\n  * если key записан в виде [keyName],\r\n  * то его название нужно менять в файле ./vars.js\r\n  * [эти названия используются где-то ещё в коде]\r\n  */\r\n  tagParameters: {\r\n\r\n    // ******************************\r\n    outside: {\r\n      [formatCommand_clear]: {\r\n        command: [\r\n          ['removeFormat', false, ''],\r\n          ['unlink', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Очистить формат',\r\n          iconName: 'FormatClear'\r\n        }\r\n      },\r\n      // p: {\r\n      //   command: [\r\n      //     ['formatBlock', false, 'p'],\r\n      //   ],\r\n      //   materialize: {\r\n      //     title: 'Параграф',\r\n      //     iconName: 'TextFormat'\r\n      //   }\r\n      // },    \r\n\r\n    },\r\n\r\n\r\n    // ******************************\r\n    titles: {\r\n      h1: {\r\n        command: [\r\n          ['formatBlock', false, 'h1'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 1',\r\n          iconName: 'Filter1'\r\n        }\r\n      },\r\n      h2: {\r\n        command: [\r\n          ['formatBlock', false, 'h2'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 2',\r\n          iconName: 'Filter2'\r\n        }\r\n      },\r\n      h3: {\r\n        command: [\r\n          ['formatBlock', false, 'h3'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 3',\r\n          iconName: 'Filter3'\r\n        }\r\n      },\r\n      h4: {\r\n        command: [\r\n          ['formatBlock', false, 'h4'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 4',\r\n          iconName: 'Filter4'\r\n        }\r\n      },\r\n      h5: {\r\n        command: [\r\n          ['formatBlock', false, 'h5'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 5',\r\n          iconName: 'Filter5'\r\n        }\r\n      },\r\n      h6: {\r\n        command: [\r\n          ['formatBlock', false, 'h6'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 6',\r\n          iconName: 'Filter6'\r\n        }\r\n      },\r\n    },\r\n\r\n\r\n\r\n\r\n    // ******************************\r\n    textStyle: {\r\n      b: {\r\n        command: [\r\n          ['bold', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Полужирный',\r\n          iconName: 'FormatBold'\r\n        }\r\n      },\r\n      i: {\r\n        command: [\r\n          ['italic', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Курсив',\r\n          iconName: 'FormatItalic'\r\n        }\r\n      },\r\n      underline: {\r\n        command: [\r\n          ['underline', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Подчёркнутый текст',\r\n          iconName: 'FormatUnderlined'\r\n        }\r\n      },\r\n      strike: {\r\n        command: [\r\n          ['strikeThrough', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Зачёркнутый текст',\r\n          iconName: 'StrikethroughS'\r\n        }\r\n      },\r\n      [formatCommand_bgcolor]: {\r\n        command: [\r\n          ['hiliteColor', false, default_bgcolor],\r\n        ],\r\n        materialize: {\r\n          title: 'Цвет фона',\r\n          iconName: 'FormatColorFill'\r\n        }\r\n      },\r\n      [formatCommand_color]: {\r\n        command: [\r\n          ['styleWithCSS', false, 'true'], // использовать стили, а не html\r\n          ['foreColor', false, '#ff0000'],\r\n          ['styleWithCSS', false, 'false'], // использовать html, а не стили\r\n        ],\r\n        materialize: {\r\n          title: 'Цвет текста',\r\n          iconName: 'FormatColorText'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textPositioning: {\r\n      left: {\r\n        command: [\r\n          ['justifyLeft', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По левому краю',\r\n          iconName: 'FormatAlignLeft'\r\n        }\r\n      },\r\n      center: {\r\n        command: [\r\n          ['justifyCenter', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По центру',\r\n          iconName: 'FormatAlignCenter'\r\n        }\r\n      },\r\n      right: {\r\n        command: [\r\n          ['justifyRight', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По правому краю',\r\n          iconName: 'FormatAlignRight'\r\n        }\r\n      },\r\n      full: {\r\n        command: [\r\n          ['justifyFull', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По ширине',\r\n          iconName: 'FormatAlignJustify'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textIndents: {\r\n      ul: {\r\n        command: [\r\n          ['insertUnorderedList', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Маркированный список',\r\n          iconName: 'FormatListNumbered'\r\n        }\r\n      },\r\n      ol: {\r\n        command: [\r\n          ['insertOrderedList', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Нумерованный список',\r\n          iconName: 'FormatListBulleted'\r\n        }\r\n      },\r\n      indent: {\r\n        command: [\r\n          ['indent', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Добавить отступ',\r\n          iconName: 'FormatIndentIncrease'\r\n        }\r\n      },\r\n      outdent: {\r\n        command: [\r\n          ['outdent', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Убрать отступ',\r\n          iconName: 'FormatIndentDecrease'\r\n        }\r\n      },\r\n      blockquote: {\r\n        command: [\r\n          ['formatBlock', false, 'blockquote'],\r\n        ],\r\n        materialize: {\r\n          title: 'Цитата',\r\n          iconName: 'FormatQuote'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    adding: {\r\n      hr: {\r\n        command: [\r\n          ['insertHorizontalRule', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Горизонтальная черта',\r\n          iconName: 'Remove'\r\n        }\r\n      },\r\n      [formatCommand_link]: {\r\n        command: [\r\n          ['createLink', false, '#'], // нельзя менять и добавлять новые команды\r\n        ],\r\n        materialize: {\r\n          title: 'Ссылка',\r\n          iconName: 'Link'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    register: {\r\n      sup: {\r\n        command: [\r\n          ['superscript', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Верхний регистр',\r\n          iconName: 'VerticalAlignTop'\r\n        }\r\n      },\r\n      sub: {\r\n        command: [\r\n          ['subscript', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Нижний регистр',\r\n          iconName: 'VerticalAlignBottom'\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n\r\n  // текст кнопок\r\n  buttons: {\r\n    edit: 'Режим редактирования текста',\r\n    reset: 'Вернуть стандартные настройки',\r\n    undo: 'Отменить',\r\n    redo: 'Повторить',\r\n    download: 'Скачать текст с тегами',\r\n    print: 'Напечатать текст',\r\n    text: 'text',\r\n    html: 'html',\r\n    css: 'css',\r\n  },\r\n\r\n  // текст полей ввода\r\n  inputs: {\r\n    fontSize: 'Размер шрифта',\r\n    lineHeight: 'Межстрочный интервал',\r\n  },\r\n\r\n  // текст в редактируемом блоке\r\n  html: `\r\n  <p>v3</p>\r\n  <p><b>Редактируемый текст</b></p>\r\n  <p>Текст и его стили можно изменять, нажав на кнопку <b>Режим редактирования текста</b>.</p>\r\n  <p>Очистить формат текста можно, нажав на <b>clearFormat</b>.</p>\r\n  <p>Аксиома <s>силлогизма</s>, по определению, представляет собой неоднозначный предмет деятельности.\r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание <i>непредсказуемо</i>. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс <sup>амбивалентно</sup> понимает</p>\r\n  <h2>Заголовок</h2>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</p>\r\n  <ul>\r\n  <li>Аксиома</li>\r\n  <li>силлогизма</li>\r\n  <li>по определению</li>\r\n  </ul>\r\n  <blockquote>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</blockquote>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</p>\r\n  `\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport { startingValue } from './startingValue';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Начальные значения\r\nconst data = startingValue;\r\n\r\nReactDOM.render(<App data={data} />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}