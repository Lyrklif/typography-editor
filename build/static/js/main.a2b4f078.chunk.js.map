{"version":3,"sources":["components/tagsPanel.js","vars.js","components/buttonsPanel.js","components/mainSettingsPanel.js","components/dialogLink.js","components/editorPanel.js","components/contentEditable.js","components/htmlEditable.js","components/tabContainer.js","components/tabSwitches.js","MyTheme.js","App.js","startingValue.js","serviceWorker.js","index.js"],"names":["TagsPanel","props","showDialogLink","setTag","bind","clearFormat","group","tag","this","editAllowed","commands","param","tagParameters","command","i","length","href","prompt","document","execCommand","styles","bgcolor","color","toUpperCase","console","log","container","selection","createRange","parentElement","select","window","getSelection","rangeCount","getRangeAt","startContainer","parentNode","nodeName","outerHTML","innerHTML","groupsTagArray","Object","keys","groupsTagList","map","index0","groupTags","tagList","index","cuttentTag","materialize","iconName","Icon","IconsLib","key","size","aria-label","title","name","onClick","Box","component","className","Divider","orientation","React","Component","ButtonsPanel","state","setGlobalParam","reset","download","undo","redo","states","editText","alert","block","querySelector","link","createElement","file","Blob","type","URL","createObjectURL","click","Grid","spacing","alignItems","justify","item","buttons","MainSettingsPanel","eventHandler","switchEditText","xs","FormControlLabel","control","Switch","checked","onChange","edit","value","TextField","id","inputs","fontSize","defaultValue","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","lineHeight","step","inputProps","DialogLink","isOpen","switchDialogLink","addLinkUrl","createRef","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","margin","label","ref","fullWidth","DialogActions","Button","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","EditorPanel","tabSwitch","dialogLink","handleChange","switchShowColorPiper","changeColor","setState","paletteEdit","hex","colorPicker","AppBar","Paper","sm","md","startIcon","style","backgroundColor","tags","tabActive","Modal","aria-describedby","variant","endIcon","ContentEditable","tabIndex","contentEditable","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","html","HTMLeditable","onBlur","TabContainer","other","h2","Typography","role","hidden","TabSwitches","Tabs","indicatorColor","textColor","centered","Tab","icon","disabled","createMuiTheme","palette","primary","deepPurple","secondary","blue","warning","App","e","newValue","sanitize","data","MyTheme","inputName","querySelectorAll","forEach","elem","text","tagName","innerText","sanitizeHtml","sanitizeParam","theme","lg","startingValue","allowedTags","allowedAttributes","a","parser","lowerCaseTags","transformTags","exclusiveFilter","frame","trim","outside","titles","h1","h3","h4","h5","h6","textStyle","b","underline","strike","textPositioning","left","center","right","full","textIndents","ul","ol","indent","outdent","blockquote","adding","hr","register","sup","sub","css","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b4f078.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\n\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\n\r\n\r\nimport {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link\r\n} from \"../vars\";\r\n\r\n\r\n\r\n// настройка тегов\r\nexport default class TagsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.state = props.param;\r\n\r\n    this.showDialogLink = this.props.showDialogLink;\r\n    this.setTag = this.setTag.bind(this);\r\n    this.clearFormat = this.clearFormat.bind(this);\r\n  }\r\n\r\n  // установить тег (форматирование текста)\r\n  setTag(group, tag) {\r\n\r\n    // ничего не делать, если это не первая вкладка\r\n    if (!this.props.editAllowed) return false;\r\n\r\n    let commands = this.props.param.tagParameters[group][tag].command; // команды, прописанные для этого тега\r\n\r\n    // если команды для этого тега существуют\r\n    if (commands) {\r\n      // применить все заданные команды из массива\r\n      for (let i = 0; i < commands.length; i++) {\r\n        // *** document.execCommand('Название команды', false, значение (если требуется));\r\n\r\n        // если нужно вводить адрес ссылки\r\n        if (tag === formatCommand_link) {\r\n          // this.showDialogLink();\r\n\r\n          let href = prompt(\"Введите путь для ссылки:\");\r\n          if (href) {\r\n            document.execCommand(commands[i][0], commands[i][1], href);\r\n          }\r\n\r\n          // если нужно выбрать цвет фона\r\n        } else if (tag === formatCommand_bgcolor) {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            this.props.param.styles.bgcolor\r\n          );\r\n\r\n          // если нужно выбрать цвет текста\r\n        } else if (i === 1 && tag === formatCommand_color) {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            this.props.param.styles.color\r\n          );\r\n\r\n          // [default] просто стилизовать текст\r\n        } else {\r\n          document.execCommand(\r\n            commands[i][0],\r\n            commands[i][1],\r\n            commands[i][2].toUpperCase()\r\n          );\r\n        }\r\n      }\r\n\r\n      // если нужно очистить формат\r\n      if (tag === formatCommand_clear) {\r\n        this.clearFormat();\r\n      }\r\n\r\n      // если команды для этого тега НЕ существуют\r\n    } else {\r\n      console.log(\r\n        \"Правила форматирования для этого тега не прописаны.\\nСделайте это в файле startingValue.js\"\r\n      );\r\n    }\r\n  }\r\n\r\n  //  очистить формат, удалив родительский тег\r\n  clearFormat() {\r\n    let container = null; // блок, с которым работаем\r\n    // если выделен (для IE)\r\n    if (document.selection) {\r\n      // записать выделенный текст\r\n      container = document.selection.createRange().parentElement();\r\n    }\r\n    // если выделен\r\n    else {\r\n      // диапазон текста, который пользователь выделил на странице\r\n      let select = window.getSelection();\r\n\r\n      // если количество диапазонов в выделении > 0\r\n      if (select.rangeCount > 0)\r\n        // записать выделенный текст\r\n        container = select.getRangeAt(0).startContainer.parentNode;\r\n    }\r\n\r\n    // если этот элемент не div и не li\r\n    // *** пояснение:\r\n    // * [div] -> чтобы нельзя было удалить сам блок .content при выделении всего содержимого\r\n    // * [li] -> чтобы нельзя было убирать формат списков (слишком много багов из-за этого)\r\n    if (container.nodeName !== \"DIV\" && container.nodeName !== \"LI\") {\r\n      container.outerHTML = container.innerHTML; // удалить родительский тег\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // преобразовать объект в массив ключей, чтобы можно было использовать .map\r\n    let tagParameters = this.props.param.tagParameters;\r\n    let groupsTagArray = Object.keys(tagParameters);\r\n\r\n    let groupsTagList = groupsTagArray.map((group, index0) => {\r\n\r\n      let groupTags = tagParameters[group];\r\n      let groupTagKeys = Object.keys(groupTags);\r\n\r\n      let tagList = groupTagKeys.map((tag, index) => {\r\n        let cuttentTag = tagParameters[group][tag];\r\n\r\n        if (cuttentTag.materialize) {\r\n          let iconName = cuttentTag.materialize.iconName;\r\n          let Icon = IconsLib[iconName];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                aria-label={cuttentTag.materialize.title}\r\n                title={cuttentTag.materialize.title}\r\n                name={tag}\r\n                onClick={() => this.setTag(group, tag)}\r\n              >\r\n                <Icon />\r\n              </IconButton>\r\n            </li>\r\n          );\r\n\r\n        };\r\n\r\n      });\r\n      return (\r\n        <Box\r\n          key={index0}\r\n          component=\"li\"\r\n          aria-label=\"li item\"\r\n          className={\"tag-list clear-list\"}\r\n        >\r\n          <Box\r\n            component=\"ul\"\r\n            aria-label=\"ul items\"\r\n            className={\"tag-list clear-list\"}>\r\n            {tagList}\r\n          </Box>\r\n          {/* После последнего элемента не добавлять черту */}\r\n          {(groupsTagArray.length - 1 !== index0) &&\r\n            <Divider orientation=\"vertical\" />\r\n          }\r\n        </Box>\r\n      );\r\n    });\r\n\r\n\r\n    return (\r\n      <Box\r\n        component=\"ul\"\r\n        aria-label=\"outlined primary button li group\"\r\n        className={\"tag-list tag-list-wp clear-list\"}\r\n      >\r\n        {groupsTagList}\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n","// переменные \r\n\r\nexport const formatCommand_clear = 'clearFormat';\r\nexport const formatCommand_bgcolor = 'bgcolor';\r\nexport const formatCommand_color = 'color';\r\nexport const formatCommand_link = 'link';\r\n\r\n\r\nexport const default_bgcolor = '#ffeb3b';\r\nexport const default_color = '#f44336';","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\n// настройка тегов\r\nexport default class ButtonsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.reset = props.reset;\r\n    // this.switchEditText = props.switchEditText;\r\n\r\n    this.download = this.download.bind(this);\r\n    this.undo = this.undo.bind(this);\r\n    this.redo = this.redo.bind(this);\r\n  }\r\n\r\n  // скачать отредактированный текст\r\n  download() {\r\n    // если режим редактирования выключен\r\n    if (!this.props.param.states.editText) {\r\n      let editableBlock = document.querySelector(\".content\"); // блок, текст в котором можно редактировать\r\n      let block = editableBlock.outerHTML; // текст внутри блока\r\n\r\n      let link = document.createElement(\"a\"); // сгенерировать ссылку\r\n      let file = new Blob([block], { type: \"txt\" }); // сгенерировать файл\r\n      link.href = URL.createObjectURL(file); // сгенерировать href\r\n      link.download = \"text.txt\"; // название и расширение файла\r\n      link.click(); // имитировать нажатие на ссылку\r\n\r\n      // если режим редактирования НЕ выключен\r\n    } else {\r\n      alert(\r\n        \"Перед скачиванием нужно выйти из режима редактирования.\\nИначе параметры редактирования не будут применены к тексту\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  undo() {\r\n    document.execCommand(\"undo\"); // Отмена последнего действия\r\n  }\r\n\r\n  // сбросить изменения  параметров\r\n  redo() {\r\n    document.execCommand(\"redo\"); // Повтор последнего действия\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n\r\n        <Grid item>\r\n          {/* КНОПКА Отменить */}\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label={this.props.param.buttons.undo}\r\n            title={this.props.param.buttons.undo}\r\n            onClick={this.undo}\r\n          >\r\n            <IconsLib.Undo />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n\r\n        <Grid item>\r\n          {/* КНОПКА Повторить */}\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label={this.props.param.buttons.redo}\r\n            title={this.props.param.buttons.redo}\r\n            onClick={this.redo}\r\n          >\r\n            <IconsLib.Redo />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n\r\n        <Grid item>\r\n          {/* КНОПКА скачать */}\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label={this.props.param.buttons.download}\r\n            title={this.props.param.buttons.download}\r\n            onClick={this.download}\r\n          >\r\n            <IconsLib.GetApp />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// настройка тегов\r\nexport default class MainSettingsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.eventHandler = props.eventHandler;\r\n    this.reset = props.reset;\r\n    this.switchEditText = props.switchEditText;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs={2}>\r\n          {/* КНОПКА Режим редактирования текста */}\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={this.props.param.states.editText}\r\n                onChange={this.switchEditText}\r\n                title={this.props.param.buttons.edit}\r\n                value=\"edit\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5} >\r\n          {/* Размер шрифта */}\r\n          <TextField\r\n            id=\"fontSize-number\"\r\n            title={this.props.param.inputs.fontSize}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            defaultValue={this.props.param.styles.fontSize}\r\n            onChange={value => this.eventHandler(\"fontSize\", value)}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\" >\r\n                  <IconsLib.FormatSize  color=\"primary\"/>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          {/* Высота строки */}\r\n          <TextField\r\n            id=\"lineHeight-number\"\r\n            title={this.props.param.inputs.lineHeight}\r\n            type=\"number\"\r\n            size=\"small\"\r\n            step=\"0.1\"\r\n            defaultValue={this.props.param.styles.lineHeight}\r\n            onChange={value => this.eventHandler(\"lineHeight\", value)}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            InputProps={{\r\n              inputProps: { step: 0.1 },\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\" >\r\n                  <IconsLib.FormatLineSpacing color=\"primary\"/>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","// dialogLink\r\n\r\nimport React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// панель редактирования\r\nexport default class DialogLink extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.isOpen;\r\n\r\n    this.switchDialogLink = props.switchDialogLink;\r\n    this.addLinkUrl = props.addLinkUrl;\r\n\r\n    this.href = React.createRef();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.isOpen ? true : false}\r\n        onClose={this.switchDialogLink}\r\n        aria-labelledby=\"form-dialog-link-url\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-link-url\">Введите адрес ссылки</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"link-url\"\r\n            label=\"Адрес ссылки\"\r\n            type=\"url\"\r\n            ref={this.href}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.switchDialogLink} color=\"primary\">\r\n            Закрыть\r\n          </Button>\r\n          {/* <Button onClick={() => this.addLinkUrl(this.href.current.lastChild.lastChild.value)} color=\"primary\"> */}\r\n          <Button onClick={this.switchDialogLink} color=\"primary\">\r\n            Отправить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { SwatchesPicker } from \"react-color\";\r\n\r\n\r\nimport TagsPanel from \"./tagsPanel\";\r\nimport ButtonsPanel from \"./buttonsPanel\";\r\nimport MainSettingsPanel from \"./mainSettingsPanel\";\r\nimport DialogLink from \"./dialogLink\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nimport {\r\n  // formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  // default_bgcolor,\r\n  // default_color,\r\n} from \"../vars\";\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\n\r\n// панель редактирования\r\nexport default class EditorPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.setGlobalParam = props.setGlobalParam;\r\n    this.switchEditText = props.switchEditText;\r\n    this.tabSwitch = props.tabSwitch;\r\n    this.dialogLink = props.dialogLink;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.switchShowColorPiper = this.switchShowColorPiper.bind(this);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.switchDialogLink = this.switchDialogLink.bind(this);\r\n  }\r\n\r\n  // при изменении выбранного цвета в палитре\r\n  handleChange(color) {\r\n    this.setState(state => ({\r\n      styles: {\r\n        ...state.styles,\r\n        [state.states.paletteEdit]: color.hex // изменить цвет для палитры\r\n      }\r\n    }));\r\n  }\r\n\r\n  // смена статуса панели выбора цвета [показать/скрыть]\r\n  switchShowColorPiper() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        colorPicker: !state.states.colorPicker\r\n      }\r\n    }));\r\n  }\r\n\r\n  // при открытии панели выбора цвета, нажатием на палитру\r\n  changeColor(param) {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        paletteEdit: param // изменить палитру, которую сейчас редактируем\r\n      }\r\n    }));\r\n\r\n    this.switchShowColorPiper();\r\n  }\r\n\r\n  // показать/скрыть диалог ввода ссылки\r\n  switchDialogLink() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        // заменить значение на противоположное\r\n        dialogLink: !this.state.states.dialogLink\r\n      }\r\n    }));\r\n  }\r\n\r\n  // addLinkUrl = (href) => {\r\n  //   this.switchDialogLink();\r\n\r\n  //   console.log(this.state);\r\n  //   let commands = this.state.tagParameters[formatCommand_link].command;\r\n\r\n  //   if (commands) {\r\n  //     for (let i = 0; i < commands.length; i++) {\r\n  //       if (!href) href = commands[i][2].toUpperCase();\r\n  //       document.execCommand(commands[i][0], commands[i][1], href);\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ElevationScroll>\r\n        <AppBar\r\n          component={'header'}\r\n          position=\"fixed\"\r\n          color=\"inherit\"\r\n        >\r\n          <h2 className=\"meta-title\">Панель редактирования</h2>\r\n          <Paper className={\"editor-panel-wp editor-panel__inner\"} >\r\n            <Grid container spacing={2} alignItems=\"center\" className={\"editor-panel__top\"} >\r\n\r\n              <Grid item xs={12} sm={6} md={4} >\r\n                {/* основные настройки */}\r\n                <MainSettingsPanel\r\n                  param={this.props.param}\r\n                  eventHandler={this.setGlobalParam}\r\n                  reset={this.reset}\r\n                  switchEditText={this.switchEditText}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={3} >\r\n                <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n                  <Grid item>\r\n                    {/* Выбор цвета фона */}\r\n                    <Button\r\n                      size=\"large\"\r\n                      color=\"primary\"\r\n                      title=\"Установить цвет фона\"\r\n                      onClick={() => this.changeColor(formatCommand_bgcolor)}\r\n                      startIcon={<IconsLib.FormatColorFill color=\"inherit\" />}\r\n                    >\r\n                      <span\r\n                        className={\"button-pallet__color\"}\r\n                        style={{ backgroundColor: this.state.styles.bgcolor }}>\r\n                      </span>\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    {/* Выбор цвета текста */}\r\n                    <Button\r\n                      size=\"large\"\r\n                      color=\"primary\"\r\n                      title=\"Установить цвет текста\"\r\n                      onClick={() => this.changeColor(formatCommand_color)}\r\n                      startIcon={<IconsLib.FormatColorText />}\r\n                    >\r\n                      <span\r\n                        className={\"button-pallet__color\"}\r\n                        style={{ backgroundColor: this.state.styles.color }}>\r\n                      </span>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} md={3}>\r\n                {/* панель с кнопками */}\r\n                <ButtonsPanel\r\n                  param={this.props.param}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Divider />\r\n            <TagsPanel\r\n              param={this.state}\r\n              tags={\"tagParameters_outside\"}\r\n              editAllowed={\r\n                this.props.param.states.tabActive == \"0\" ? true : false\r\n              }\r\n              switchShowColorPiper={this.switchShowColorPiper}\r\n              showDialogLink={this.switchDialogLink}\r\n            />\r\n\r\n\r\n\r\n            {/* Панель выбора цвета */}\r\n            <Modal\r\n              aria-labelledby=\"simple-modal-title\"\r\n              aria-describedby=\"simple-modal-description\"\r\n              open={this.state.states.colorPicker}\r\n              onClose={this.switchShowColorPiper}\r\n            >\r\n\r\n              <div className={\"color-picker-wp\"}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  label=\"Закрыть\"\r\n                  aria-label=\"close\"\r\n                  onClick={this.switchShowColorPiper}\r\n                  size=\"medium\"\r\n                  className={\"color-picker-wp__close\"}\r\n                  endIcon={<IconsLib.HighlightOff />}\r\n                >\r\n                  Закрыть\r\n                </Button>\r\n\r\n                <SwatchesPicker\r\n                  onChange={this.handleChange}\r\n                  color={this.state.styles.bgcolor}\r\n                />\r\n              </div>\r\n            </Modal>\r\n\r\n            <DialogLink\r\n              isOpen={this.state.states.dialogLink}\r\n              switchDialogLink={this.switchDialogLink}\r\n            // addLinkUrl={this.addLinkUrl}\r\n            />\r\n          </Paper>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class ContentEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n  }\r\n\r\n  render() {\r\n    let createContent = () => {\r\n      return { __html: this.props.param.html };\r\n    }\r\n    return (\r\n      <div\r\n        tabIndex={this.props.param.states.editText ? '0' : null}\r\n        contentEditable={this.props.param.states.editText ? 'true' : 'false'}\r\n        suppressContentEditableWarning={true} // чтобы убрать в консоли предупреждение о contentEditable\r\n        className={this.props.param.states.editText ? 'content edit' : 'content'}\r\n        dangerouslySetInnerHTML={createContent()} // вставить переданный текст\r\n        style={{\r\n          fontSize: `${this.props.param.styles.fontSize}px`,\r\n          lineHeight: `${this.props.param.styles.lineHeight}em`\r\n        }}\r\n      >\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class HTMLeditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.param;\r\n\r\n    this.onBlur = this.props.onBlur;\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <pre>\r\n        <code\r\n          tabIndex=\"0\"\r\n          contentEditable={this.props.param.states.editText ? 'true' : 'false'}\r\n          suppressContentEditableWarning={true} // чтобы убрать в консоли предупреждение о contentEditable\r\n          className={this.props.param.states.editText ? 'content edit' : 'content'}\r\n          onChange={this.onChange} // \r\n          onBlur={this.onBlur} // событие при потере фокуса \r\n        >\r\n          {this.props.param.html}\r\n        </code>\r\n      </pre>\r\n    );\r\n  }\r\n};","// tabContent\r\n\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n// Текст, который можно редактировать\r\nexport default class TabContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { children, value, index, ...other } = this.props;\r\n\r\n    return (\r\n      <Paper\r\n        component=\"section\">\r\n        <header className=\"meta-title\">\r\n          <h2>{this.props.h2}</h2>\r\n        </header>\r\n\r\n        <Typography\r\n          component=\"div\"\r\n          role=\"tabpanel\"\r\n          hidden={value !== index}\r\n          id={`simple-tabpanel-${index}`}\r\n          aria-labelledby={`simple-tab-${index}`}\r\n          {...other}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n}","// tabSwitches\r\n\r\nimport React from 'react';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport * as IconsLib from \"@material-ui/icons\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// настройка тегов\r\nexport default class TabSwitches extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.props.onChange;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Paper component={\"nav\"}>\r\n        <Tabs\r\n          className={\"clear-list\"}\r\n          value={this.props.value}\r\n          onChange={this.onChange}\r\n          aria-label=\"simple tabs example\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab\r\n            // label=\"Текст\"\r\n            icon={<IconsLib.Subject />}\r\n            aria-label=\"Режим просмотра текста\"\r\n            title=\"Режим просмотра текста\" />\r\n          <Tab\r\n            // label=\"HTML\"\r\n            icon={<IconsLib.SettingsEthernet />}\r\n            aria-label=\"Режим просмотра HTML\"\r\n            title=\"Режим просмотра HTML\" />\r\n          <Tab\r\n            // label=\"CSS\"\r\n            icon={<IconsLib.Texture />}\r\n            aria-label=\"Режим просмотра CSS\"\r\n            title=\"Режим просмотра CSS\"\r\n            disabled\r\n          />\r\n        </Tabs>\r\n      </Paper>\r\n    )\r\n  }\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: deepPurple,\r\n    secondary: blue,\r\n    warning: deepPurple,\r\n  },\r\n});","// React\r\nimport React from \"react\";\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\n// Мои компоненты\r\nimport EditorPanel from \"./components/editorPanel\";\r\nimport ContentEditable from \"./components/contentEditable\";\r\n\r\nimport HTMLeditable from \"./components/htmlEditable\";\r\nimport TabContainer from \"./components/tabContainer\";\r\nimport TabSwitches from \"./components/tabSwitches\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport MyTheme from './MyTheme';\r\n\r\n// Стили\r\nimport \"./App.css\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.data;\r\n\r\n    console.log(\"*** Начальные данные ***\\n\", this.state);\r\n    console.log(\"*** Пользовательская тема ***\", MyTheme);\r\n\r\n    this.setGlobalParam = this.setGlobalParam.bind(this);\r\n    this.switchEditText = this.switchEditText.bind(this);\r\n    this.sanitize = this.sanitize.bind(this);\r\n  }\r\n\r\n  // установить глобальные настройки\r\n  setGlobalParam(inputName, e) {\r\n    let value = e.target.value;\r\n\r\n    this.setState(state => ({\r\n      styles: {\r\n        ...state.styles,\r\n        [inputName]: [value]\r\n      }\r\n    }));\r\n  }\r\n\r\n  // вкл/откл возможность редактировать текст\r\n  switchEditText() {\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        // заменить значение на противоположное\r\n        editText: !this.state.states.editText\r\n      }\r\n    }));\r\n\r\n    // если режим редактирования выключен\r\n    if (this.state.states.editText) {\r\n      this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n    }\r\n  }\r\n\r\n  // записать новый текст, удалив неразрешённые теги\r\n  sanitize() {\r\n    let editableBlock = document.querySelectorAll(\".content\"); // блок, текст в котором можно редактировать\r\n\r\n    editableBlock.forEach(elem => {\r\n      let text = elem.tagName !== \"CODE\" ? elem.innerHTML : elem.innerText; // текст внутри блока\r\n\r\n      // если текст изменился\r\n      if (text !== this.state.html) {\r\n        // записать новую версию текста, применив настройки (удалить пустые теги, заменить символы и пр.)\r\n        this.setState({\r\n          html: sanitizeHtml(text, this.state.sanitizeParam)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // переключить активный таб\r\n  tabSwitch = (e, newValue) => {\r\n    this.sanitize(); // записать новый текст, удалив неразрешённые теги\r\n\r\n    this.setState(state => ({\r\n      states: {\r\n        ...state.states,\r\n        tabActive: newValue\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={MyTheme}>\r\n        <Box component=\"main\" className=\"App\" >\r\n          {/* панель редактирования */}\r\n          <EditorPanel\r\n            param={this.state}\r\n            setGlobalParam={this.setGlobalParam}\r\n            switchEditText={this.switchEditText}\r\n            tabSwitch={this.tabSwitch}\r\n            dialogLink={this.switchDialogLink}\r\n          />\r\n\r\n          <Grid container spacing={0} alignItems=\"center\" justify=\"center\" className=\"tabs-wrap\">\r\n            <Grid item xs={12} md={10} lg={8}>\r\n\r\n              {/* Переключатель вкладок */}\r\n              <TabSwitches\r\n                value={this.state.states.tabActive}\r\n                onChange={this.tabSwitch}\r\n              />\r\n\r\n              {/* Вкладка №1 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={0}\r\n                h2={\"Редактируемый текст\"}>\r\n                <ContentEditable param={this.state} />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №2 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={1}\r\n                h2={\"Редактируемый html\"}>\r\n                <HTMLeditable param={this.state} />\r\n              </TabContainer>\r\n\r\n              {/* Вкладка №3 */}\r\n              <TabContainer\r\n                value={this.state.states.tabActive}\r\n                index={2}\r\n                h2={\"Редактируемые стили\"}>\r\n                <p>Тут будет отображаться css</p>\r\n              </TabContainer>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}","import {\r\n  formatCommand_clear,\r\n  formatCommand_bgcolor,\r\n  formatCommand_color,\r\n  formatCommand_link,\r\n  default_bgcolor,\r\n  default_color,\r\n} from './vars';\r\n\r\n// Начальные значения\r\nexport const startingValue = {\r\n  // стили\r\n  styles: {\r\n    fontSize: 16,\r\n    lineHeight: 2.2,\r\n\r\n    bgcolor: default_bgcolor,\r\n    color: default_color,\r\n  },\r\n\r\n  // состояния элементов\r\n  states: {\r\n    editText: true, // вкл/выкл режим редактирования текста\r\n    colorPicker: false, // показать/скрыть панель выбора цвета\r\n    dialogLink: false, // показать/скрыть панель ввода ссылки\r\n\r\n    // какой параметр по-умолчанию изменяет панель выбора цвета\r\n    paletteEdit: formatCommand_bgcolor,\r\n\r\n    // какой таб будет активным изначально\r\n    tabActive: 0\r\n  },\r\n\r\n  // параметры для sanitize-html\r\n  sanitizeParam: {\r\n    // разрешённые в редактируемом блоке теги\r\n    allowedTags: false, // разрешить все теги\r\n    // allowedTags: [\r\n    //   'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',\r\n    //   'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'sub', 'sup', 'span'\r\n    // ],\r\n    // разрешённые атрибуты\r\n    allowedAttributes: {\r\n      a: ['href', 'name', 'target'],\r\n      '*': ['style', 'color', 'bgcolor', 'background-color']\r\n    },\r\n    parser: {\r\n      lowerCaseTags: true\r\n    },\r\n    // заменить <x> на <y>\r\n    transformTags: {\r\n      'div': 'p',\r\n      'br': '',\r\n      'strong': 'b',\r\n      'em': 'i',\r\n      'strike': 's',\r\n    },\r\n    // удалить пусте теги\r\n    exclusiveFilter: function (frame) {\r\n      return (\r\n        !frame.text.trim()\r\n      );\r\n    },\r\n  },\r\n\r\n  /*\r\n  * команды для редактирования текста\r\n  * если key записан в виде [keyName],\r\n  * то его название нужно менять в файле ./vars.js\r\n  * [эти названия используются где-то ещё в коде]\r\n  */\r\n  tagParameters: {\r\n\r\n    // ******************************\r\n    outside: {\r\n      [formatCommand_clear]: {\r\n        command: [\r\n          ['removeFormat', false, ''],\r\n          ['unlink', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Очистить формат',\r\n          iconName: 'FormatClear'\r\n        }\r\n      },\r\n      // p: {\r\n      //   command: [\r\n      //     ['formatBlock', false, 'p'],\r\n      //   ],\r\n      //   materialize: {\r\n      //     title: 'Параграф',\r\n      //     iconName: 'TextFormat'\r\n      //   }\r\n      // },    \r\n\r\n    },\r\n\r\n\r\n    // ******************************\r\n    titles: {\r\n      h1: {\r\n        command: [\r\n          ['formatBlock', false, 'h1'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 1',\r\n          iconName: 'Filter1'\r\n        }\r\n      },\r\n      h2: {\r\n        command: [\r\n          ['formatBlock', false, 'h2'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 2',\r\n          iconName: 'Filter2'\r\n        }\r\n      },\r\n      h3: {\r\n        command: [\r\n          ['formatBlock', false, 'h3'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 3',\r\n          iconName: 'Filter3'\r\n        }\r\n      },\r\n      h4: {\r\n        command: [\r\n          ['formatBlock', false, 'h4'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 4',\r\n          iconName: 'Filter4'\r\n        }\r\n      },\r\n      h5: {\r\n        command: [\r\n          ['formatBlock', false, 'h5'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 5',\r\n          iconName: 'Filter5'\r\n        }\r\n      },\r\n      h6: {\r\n        command: [\r\n          ['formatBlock', false, 'h6'],\r\n        ],\r\n        materialize: {\r\n          title: 'Заголовок 6',\r\n          iconName: 'Filter6'\r\n        }\r\n      },\r\n    },\r\n\r\n\r\n\r\n\r\n    // ******************************\r\n    textStyle: {\r\n      b: {\r\n        command: [\r\n          ['bold', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Полужирный',\r\n          iconName: 'FormatBold'\r\n        }\r\n      },\r\n      i: {\r\n        command: [\r\n          ['italic', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Курсив',\r\n          iconName: 'FormatItalic'\r\n        }\r\n      },\r\n      underline: {\r\n        command: [\r\n          ['underline', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Подчёркнутый текст',\r\n          iconName: 'FormatUnderlined'\r\n        }\r\n      },\r\n      strike: {\r\n        command: [\r\n          ['strikeThrough', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Зачёркнутый текст',\r\n          iconName: 'StrikethroughS'\r\n        }\r\n      },\r\n      [formatCommand_bgcolor]: {\r\n        command: [\r\n          ['hiliteColor', false, default_bgcolor],\r\n        ],\r\n        materialize: {\r\n          title: 'Цвет фона',\r\n          iconName: 'FormatColorFill'\r\n        }\r\n      },\r\n      [formatCommand_color]: {\r\n        command: [\r\n          ['styleWithCSS', false, 'true'], // использовать стили, а не html\r\n          ['foreColor', false, '#ff0000'],\r\n          ['styleWithCSS', false, 'false'], // использовать html, а не стили\r\n        ],\r\n        materialize: {\r\n          title: 'Цвет текста',\r\n          iconName: 'FormatColorText'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textPositioning: {\r\n      left: {\r\n        command: [\r\n          ['justifyLeft', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По левому краю',\r\n          iconName: 'FormatAlignLeft'\r\n        }\r\n      },\r\n      center: {\r\n        command: [\r\n          ['justifyCenter', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По центру',\r\n          iconName: 'FormatAlignCenter'\r\n        }\r\n      },\r\n      right: {\r\n        command: [\r\n          ['justifyRight', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По правому краю',\r\n          iconName: 'FormatAlignRight'\r\n        }\r\n      },\r\n      full: {\r\n        command: [\r\n          ['justifyFull', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'По ширине',\r\n          iconName: 'FormatAlignJustify'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    textIndents: {\r\n      ul: {\r\n        command: [\r\n          ['insertUnorderedList', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Маркированный список',\r\n          iconName: 'FormatListNumbered'\r\n        }\r\n      },\r\n      ol: {\r\n        command: [\r\n          ['insertOrderedList', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Нумерованный список',\r\n          iconName: 'FormatListBulleted'\r\n        }\r\n      },\r\n      indent: {\r\n        command: [\r\n          ['indent', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Добавить отступ',\r\n          iconName: 'FormatIndentIncrease'\r\n        }\r\n      },\r\n      outdent: {\r\n        command: [\r\n          ['outdent', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Убрать отступ',\r\n          iconName: 'FormatIndentDecrease'\r\n        }\r\n      },\r\n      blockquote: {\r\n        command: [\r\n          ['formatBlock', false, 'blockquote'],\r\n        ],\r\n        materialize: {\r\n          title: 'Цитата',\r\n          iconName: 'FormatQuote'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    adding: {\r\n      hr: {\r\n        command: [\r\n          ['insertHorizontalRule', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Горизонтальная черта',\r\n          iconName: 'Remove'\r\n        }\r\n      },\r\n      [formatCommand_link]: {\r\n        command: [\r\n          ['createLink', false, '#'], // нельзя менять и добавлять новые команды\r\n        ],\r\n        materialize: {\r\n          title: 'Ссылка',\r\n          iconName: 'Link'\r\n        }\r\n      },\r\n    },\r\n\r\n    // ******************************\r\n    register: {\r\n      sup: {\r\n        command: [\r\n          ['superscript', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Верхний регистр',\r\n          iconName: 'VerticalAlignTop'\r\n        }\r\n      },\r\n      sub: {\r\n        command: [\r\n          ['subscript', false, ''],\r\n        ],\r\n        materialize: {\r\n          title: 'Нижний регистр',\r\n          iconName: 'VerticalAlignBottom'\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n\r\n  // текст кнопок\r\n  buttons: {\r\n    edit: 'Режим редактирования текста',\r\n    reset: 'Вернуть стандартные настройки',\r\n    undo: 'Отменить',\r\n    redo: 'Повторить',\r\n    download: 'Скачать текст с тегами',\r\n    text: 'text',\r\n    html: 'html',\r\n    css: 'css',\r\n  },\r\n\r\n  // текст полей ввода\r\n  inputs: {\r\n    fontSize: 'Размер шрифта',\r\n    lineHeight: 'Межстрочный интервал',\r\n  },\r\n\r\n  // текст в редактируемом блоке\r\n  html: `\r\n  <p>v3</p>\r\n  <p><b>Редактируемый текст</b></p>\r\n  <p>Текст и его стили можно изменять, нажав на кнопку <b>Режим редактирования текста</b>.</p>\r\n  <p>Очистить формат текста можно, нажав на <b>clearFormat</b>.</p>\r\n  <p>Аксиома <s>силлогизма</s>, по определению, представляет собой неоднозначный предмет деятельности.\r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание <i>непредсказуемо</i>. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс <sup>амбивалентно</sup> понимает</p>\r\n  <h2>Заголовок</h2>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</p>\r\n  <ul>\r\n  <li>Аксиома</li>\r\n  <li>силлогизма</li>\r\n  <li>по определению</li>\r\n  </ul>\r\n  <blockquote>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. Смысл жизни, следовательно, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</blockquote>\r\n  <p>Аксиома силлогизма, по определению, представляет собой неоднозначный предмет деятельности. \r\n  Наряду с этим ощущение мира решительно контролирует непредвиденный гравитационный парадокс. \r\n  Созерцание непредсказуемо. <a href=\"#\">Смысл жизни</a>, <b>следовательно</b>, творит данный закон внешнего мира. \r\n  Апостериори, гравитационный парадокс амбивалентно понимает</p>\r\n  `\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport { startingValue } from './startingValue';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Начальные значения\r\nconst data = startingValue;\r\n\r\nReactDOM.render(<App data={data} />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}